openapi: 3.0.3
info:
  title: Coastal Pay API
  description: >
    # Introduction

    Welcome to Coastal Payâ€™s API!


    The API is organized around `REST`.
    All requests should be made over `SSL`.


    All request and response bodies, including errors, are encoded in `JSON`.

    # Open API

    The Open API provides numerous functions to access or to update your CRM lead  and merchant  data using simple REST calls.

    ### You can use the E-Signature API to:

    - [Generate an e-signature document](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1signatures~1{applicationId}~1generate/post)

    - [Send an e-signature document](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1signatures~1{applicationId}~1send/post)

    - [Download an e-signature document](https://www.mycoastalpay.com/api#/paths/~1leads~1signatures~1{applicationId}~1download/get)

    - [Get a list of all lead e-signatures documents](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1signatures/get)

    - [Get a list of available applications](https://www.mycoastalpay.com/api#/paths/~1leads~1applications/get)

    - [Create a new application field mapping](https://www.mycoastalpay.com/api#/paths/~1leads~1applications~1{appId}~1mappings/post)

    - [Get a list of available application field mappings](https://www.mycoastalpay.com/api#/paths/~1leads~1applications~1{appId}~1mappings/get)

    - [Get an application field mapping list](https://www.mycoastalpay.com/api#/paths/~1leads~1applications~1{appId}~1mappings~1{mapId}/get)

    - [Update an application field mapping](https://www.mycoastalpay.com/api#/paths/~1leads~1applications~1{appId}~1mappings~1{mapId}/patch)

    - [Delete an application field mapping](https://www.mycoastalpay.com/api#/paths/~1leads~1applications~1{appId}~1mappings~1{mapId}/delete)

    ### You can use the Helpdesk API to:

    - [Create a new ticket](https://www.mycoastalpay.com/api#/paths/~1helpdesk/post)

    - [Get a list of helpdesk tickets](https://www.mycoastalpay.com/api#/paths/~1helpdesk/get)

    - [Add a ticket comment](https://www.mycoastalpay.com/api#/paths/~1helpdesk~1{ticketId}~1comment/post)

    - [Get detailed ticked information](https://www.mycoastalpay.com/api#/paths/~1helpdesk~1{ticketId}/get)

    - [Update a ticket](https://www.mycoastalpay.com/api#/paths/~1helpdesk~1{ticketId}/patch)

    - [Delete a ticket](https://www.mycoastalpay.com/api#/paths/~1helpdesk~1{ticketId}/delete)

    - [Upload an attachment to a ticket, comment, checklist, or ticket type](https://www.mycoastalpay.com/api#/paths/~1helpdesk~1file/post)

    - [Download an attachment from a ticket](https://www.mycoastalpay.com/api#/paths/~1helpdesk~1{ticketId}~1download~1{attachmentId}/get)

    - [Create a new helpdesk ticket type](https://www.mycoastalpay.com/api#/paths/~1helpdesk~1types/post)

    - [Get a list of helpdesk ticket types](https://www.mycoastalpay.com/api#/paths/~1helpdesk~1types/get)

    - [Get details for a helpdesk ticket type](https://www.mycoastalpay.com/api#/paths/~1helpdesk~1types~1{typeId}/get)

    - [Update a helpdesk ticket type](https://www.mycoastalpay.com/api#/paths/~1helpdesk~1types~1{typeId}/patch)

    - [Delete a ticket type](https://www.mycoastalpay.com/api#/paths/~1helpdesk~1types~1{typeId}/delete)

    - [Download an attachment from a ticket type](https://www.mycoastalpay.com/api#/paths/~1helpdesk~1types~1{typeId}~1download~1{attachmentId}/get)

    - [Get a list of available users to notify and assign](https://www.mycoastalpay.com/api#/paths/~1helpdesk~1users/get)

    ### You can use the Lead API to:

    - [Create a lead](https://www.mycoastalpay.com/api#/paths/~1leads/post)

    - [Get a list of leads](https://www.mycoastalpay.com/api#/paths/~1leads/get)

    - [Get detailed lead information](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}/get)

    - [Update a lead](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}/patch)
    
    - [Get lead information from a specific tab](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1tabs~1{tabId}~1fields/get)

    - [Create a new lead field](https://www.mycoastalpay.com/api#/paths/~1leads~1fields/post)

    - [Get a list of available lead fields](https://www.mycoastalpay.com/api#/paths/~1leads~1fields/get)

    - [Get a lead field](https://www.mycoastalpay.com/api#/paths/~1leads~1fields~1{fieldId}/get)

    - [Update a lead field](https://www.mycoastalpay.com/api#/paths/~1leads~1fields~1{fieldId}/patch)

    - [Update a lead field order position](https://www.mycoastalpay.com/api#/paths/~1leads~1fields~1{fieldId}~1order/patch)

    - [Create a lead field tab](https://www.mycoastalpay.com/api#/paths/~1leads~1fields~1tabs/post)

    - [Get a list of all lead field tabs](https://www.mycoastalpay.com/api#/paths/~1leads~1fields~1tabs/get)

    - [Get a lead field tab](https://www.mycoastalpay.com/api#/paths/~1leads~1fields~1tabs~1{tabId}/get)

    - [Update a lead field tab](https://www.mycoastalpay.com/api#/paths/~1leads~1fields~1tabs~1{tabId}/patch)

    - [Create a lead note](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1notes/post)

    - [Get lead notes](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1notes/get)

    - [Create a lead appointment](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1appointments/post)

    - [Get lead appointments](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1appointments/get)

    - [Populate PDF Document](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1applications~1{applicationId}~1populate/post)

    - [Create a lead task](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1tasks/post)

    - [Get lead tasks](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1tasks/get)

    - [Assign a user](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1users/post)

    - [Get a list of assigned users](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1users/get)

    - [Unassign a user from a lead](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1users~1{userId}/delete)

    - [Upload a document](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1documents/post)

    - [Get a list of available documents](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1documents/get)

    - [Get a list of available document labels](https://www.mycoastalpay.com/api#/paths/~1leads~1file_labels/get)

    - [Download a document](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1documents~1{documentId}/get)

    - [Send an email to lead with template](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1emails~1{templateId}/post)

    - [Get a list of email templates](https://www.mycoastalpay.com/api#/paths/~1leads~1emails~1templates/get)

    - [Download a mailbox email attachment](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1mailbox~1{emailId}~1attachment~1{attachmentId}/get)

    - [Send an SMS to lead with selected SMS template](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1sms~1{templateId}/post)

    - [Get list of SMS templates](https://www.mycoastalpay.com/api#/paths/~1leads~1sms~1templates/get)

    - [Get a list of all lead campaign activity](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1activity~1campaign/get)

    - [Get a list of all lead deletion activity](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1activity~1deletion/get)

    - [Get a list of all lead duplicate activity](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1activity~1duplicates/get)

    - [Get a list of all lead links activity](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1activity~1links/get)

    - [Get a list of all lead source activity](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1activity~1source/get)

    - [Get a list of all lead status activity](https://www.mycoastalpay.com/api#/paths/~1leads~1{leadId}~1activity~1status/get)

    - [Get a list of available campaigns](https://www.mycoastalpay.com/api#/paths/~1leads~1campaigns/get)

    - [Get a list of available groups](https://www.mycoastalpay.com/api#/paths/~1leads~1groups/get)

    - [Get a list of available sources](https://www.mycoastalpay.com/api#/paths/~1leads~1sources/get)

    - [Get a list of available statuses](https://www.mycoastalpay.com/api#/paths/~1leads~1statuses/get)

    - [Get a list of available users](https://www.mycoastalpay.com/api#/paths/~1leads~1users/get)

    
    ### You can use the Merchant API to:

    - [Get a list of merchants](https://www.mycoastalpay.com/api#/paths/~1merchants/get)

    - [Get detailed merchant information](https://www.mycoastalpay.com/api#/paths/~1merchants~1{merchantNumber}/get)

    - [Update an existing merchant](https://www.mycoastalpay.com/api#/paths/~1merchants~1{merchantNumber}/patch)

    - [Get a list of batches and transactions](https://www.mycoastalpay.com/api#/paths/~1merchants~1{merchantNumber}~1transactions/get)

    - [Get a list of chargebacks](https://www.mycoastalpay.com/api#/paths/~1merchants~1{merchantNumber}~1chargebacks/get)

    - [Get a list of retrievals](https://www.mycoastalpay.com/api#/paths/~1merchants~1{merchantNumber}~1retrievals/get)

    - [Get a list of statements](https://www.mycoastalpay.com/api#/paths/~1merchants~1{merchantNumber}~1statements/get)

    - [Download a statement](https://www.mycoastalpay.com/api#/paths/~1merchants~1{merchantNumber}~1statements~1{statementId}/get)

    ### You can use the Residuals API to:

    - [Get residuals summary data](https://www.mycoastalpay.com/api#/paths/~1residuals~1reports~1summary~1{year}~1{month}/get)

    - [Get residuals summary with merchant rows](https://www.mycoastalpay.com/api#/paths/~1residuals~1reports~1summary~1rows~1{processor_id}~1{year}~1{month}/get)

    - [Get residuals details with merchant rows](https://www.mycoastalpay.com/api#/paths/~1residuals~1reports~1details~1{processor_id}~1{year}~1{month}/get)

    - [Get residuals line items](https://www.mycoastalpay.com/api#/paths/~1residuals~1lineitems~1{year}~1{month}/get)

    - [Get residuals templates](https://www.mycoastalpay.com/api#/paths/~1residuals~1templates~1/get)

    - [Get a list of users with assigned residuals templates](https://www.mycoastalpay.com/api#/paths/~1residuals~1templates~1assigned~1{year}~1{month}/get)

    

    # Generate an API token

    When you send an API request, you will need to include an API token in your request in order to authenticate your account.


    The tokens are generated in the CRM by each user individually, and each user may create one or more tokens.


    To generate a new API Token, open your user settings page by clicking on your username in the top-right corner, and clicking on the ** Settings ** link or you can use the <a href="https://www.mycoastalpay.com/settings">link</a>.


    Then open the ** API Settings ** tab, click ** Create New API Token **, configure your tokenâ€™s settings as needed, and click ** Add New Token **:


    <img src='https://www.mycoastalpay.com/images/docs/mapi001.png'/>


    Your new token will now be created and displayed in a popup window:


    <img src='https://www.mycoastalpay.com/images/docs/mapi002.png'/>


    Once the token is created, it will be shown in the list of available API Tokens where you can copy the token, update its settings, or delete it once itâ€™s no longer needed:


    <img src='https://www.mycoastalpay.com/images/docs/mapi003.png'/>


    ** Note: ** The created tokens will inherit the userâ€™s permissions to assigned merchants, leads, groups and processors.

    # Using the API

    Authentication to the API is performed via `X-API-KEY` header. Requests not properly authenticated will return a `401` error code.


    `curl -X GET "https://www.mycoastalpay.com/api/v1/leads" -H "accept: application/json" -H "X-API-KEY: [YOURKEY]"`


    Note that all requests should be made over `SSL`. All request and response bodies, including errors, are encoded in JSON.


    The API returns standard HTTP success or error status codes. In case of errors, additional information about what went wrong will be encoded in the response as JSON.


    By default, you can make `500` requests per minute. Check the returned HTTP headers of any API request to see your current rate limit status.


    Each GET "List" request will return 1,000 matching results.  A maximum of 500,000 results can be returned per minute using a pagination parameter in these requests.

    # Using the Subscription API

    API Subscriptions are used to send information about an event to a URL and trigger an API call. This is more efficient than doing scheduled API calls.


    To create a subscription, use the API Settings page or send a request using the instructions in the Subscriptions section below.


    All you need to know is the events you want to be subscribed for and the url to which the updates need to be sent.


    To create subscriptions using our GUI open tab ** API Settings ** at ** https://www.mycoastalpay.com/settings **:


    <img src='https://www.mycoastalpay.com/images/docs/new-subscription.png'/>

    # Authentication

    Authenticate your account by including your secret key in API requests.
    Do not share your secret API keys in publicly accessible areas, client-side code, and so forth.
    Authentication to the API is performed via `X-API-KEY` header.
    Requests not properly authenticated will return a `401` error code.

    # Errors

    Our API returns standard `HTTP` success or error status codes.
    For errors, we will also include extra information about what went wrong encoded in the response as `JSON`.

    # Limiting

    You can make `500` requests per minute.
    If you will reach a limit you will get a `429: Too Many Attempts.` response from the server.
    Check the returned `HTTP` headers of any API request to see your current rate limit status.

    Headers description:

    * `X-RateLimit-Limit` tells you the max number of requests you're allowed to make within this application's time period

    * `X-RateLimit-Remaining` tells you how many requests you have left within this current time period

    * `Retry-After` tells you how many seconds to wait until you try again. (you'll only get `Retry-After` if you've hit the limit).



    # PHP SDK


    ### Installation and Usage


    #### Availability


    The IRIS CRM PHP SDK requires PHP version 5.5 or higher and the PHP cURL extension.


    #### Composer


    To install the bindings via [Composer](http://getcomposer.org/), please run:


    ```bash
     composer require iris-crm/php-sdk
         ```


    In your code, configure the environment and API credentials:


    ```php

    require_once(__DIR__ . '/vendor/autoload.php');


    use Swagger\Client\Configuration;

    use Swagger\Client\Api\LeadsApi;


    // Configure API key authorization

    $config = Configuration::getDefaultConfiguration()
    ->setApiKey('X-API-KEY', 'YOUR_API_KEY')
    ->setHost('https://www.mycoastalpay.com/api/v1/');
    ```

    Hereâ€™s an example of how to get a list of leads using an SDK.

    Swagger\Client\Api\LeadsApi it's a SDK Class for Lead endpoints.

    ```php

    $apiInstance = new LeadsApi(null, $config);


    $page        = 1; // int | Page number

    $sort_by     = "created"; // string | Sorting of leads by the field value

    $sort_dir    = "asc"; // string | Direction of sorting

    $group       = 2; // int | Filter leads by a group id

    $campaign    = 3; // int | Filter leads by a campaign id

    $source      = 4; // int | Filter leads by a source id

    $status      = 1; // int | Filter leads by a status id

    $category    = 1; // int | Filter leads by a status category id

    $user        = 12; // int | Filter leads by a user id

    $date_filter = "created"; // string | Filtering leads by a date range depends on this filter

    $start_date  = new \DateTime("2018-10-20T19:20:30+01:00"); // \DateTime | Filter leads by a date in ISO 8601 format (Y-m-d\\TH:i:sP)

    $end_date    = new \DateTime("2019-10-20T19:20:30+01:00"); // \DateTime | Filter leads by a date in ISO 8601 format (Y-m-d\\TH:i:sP)

    $email       = "test@mail.com"; // string | Filter leads by a email

    try {
        $result = $apiInstance->leadsGet($page, $sort_by, $sort_dir, $group, $campaign, $source, $status, $category, $user, $date_filter, $start_date, $end_date, $email);
        print_r($result);
    } catch (Exception $e) {
        echo 'Exception when calling LeadsApi->leadsGet: ' . $e->getMessage() . PHP_EOL;
    }
    ```

    All parameters for leadsGet method is optional and can be skipped.


    If you want skip some parameters - you need to set parameter to `null`


    All available classes and methods you can get in "API Endpoints" section below.

    ### API Endpoints

    All URIs are relative to *https://www.mycoastalpay.com/api/v1*


    Class | Method | HTTP Request | Description

    ------------ | ------------- | ------------- | -------------

    *LeadsApi* | **leadsApplicationsAppIdMappingsGet** | **GET** /leads/applications/{appId}/mappings | Get a list of available application field mappings

    *LeadsApi* | **leadsApplicationsAppIdMappingsMapIdDelete** | **DELETE** /leads/applications/{appId}/mappings/{mapId} | Delete an application field mapping

    *LeadsApi* | **leadsApplicationsAppIdMappingsMapIdGet** | **GET** /leads/applications/{appId}/mappings/{mapId} | Get an application field mapping list

    *LeadsApi* | **leadsApplicationsAppIdMappingsMapIdPatch** | **PATCH** /leads/applications/{appId}/mappings/{mapId} | Update an application field mapping

    *LeadsApi* | **leadsApplicationsAppIdMappingsPost** | **POST** /leads/applications/{appId}/mappings | Create a new application field mapping

    *LeadsApi* | **leadsApplicationsGet** | **GET** /leads/applications | Get a list of available applications

    *LeadsApi* | **leadsCampaignsGet** | **GET** /leads/campaigns | Get a list of available campaigns

    *LeadsApi* | **leadsDynamicFieldsSchemaGet** | **GET** /leads/dynamic-fields-schema | Get a schema of lead fields

    *LeadsApi* | **leadsEmailsTemplatesGet** | **GET** /leads/emails/templates | Get a list of email templates

    *LeadsApi* | **leadsFieldsFieldIdGet** | **GET** /leads/fields/{fieldId} | Get a lead field

    *LeadsApi* | **leadsFieldsFieldIdOrderPatch** | **PATCH** /leads/fields/{fieldId}/order | Update a lead field order position

    *LeadsApi* | **leadsFieldsFieldIdPatch** | **PATCH** /leads/fields/{fieldId} | Update a lead field

    *LeadsApi* | **leadsFieldsGet** | **GET** /leads/fields | Get a list of available lead fields

    *LeadsApi* | **leadsFieldsPost** | **POST** /leads/fields | Create a new lead field

    *LeadsApi* | **leadsFieldsTabsGet** | **GET** /leads/fields/tabs | Get a list of all lead field tabs

    *LeadsApi* | **leadsFieldsTabsPost** | **POST** /leads/fields/tabs | Create a lead field tab

    *LeadsApi* | **leadsFieldsTabsTabIdGet** | **GET** /leads/fields/tabs/{tabId} | Get a lead field tab

    *LeadsApi* | **leadsFieldsTabsTabIdPatch** | **PATCH** /leads/fields/tabs/{tabId} | Update a lead field tab

    *LeadsApi* | **leadsGet** | **GET** /leads | Get a list of leads

    *LeadsApi* | **leadsGroupsGet** | **GET** /leads/groups | Get a list of available groups

    *LeadsApi* | **leadsLeadIdActivityCampaignGet** | **GET** /leads/{leadId}/activity/campaign | Get a list of all lead campaign activity

    *LeadsApi* | **leadsLeadIdActivityDeletionGet** | **GET** /leads/{leadId}/activity/deletion | Get a list of all lead deletion activity

    *LeadsApi* | **leadsLeadIdActivityDuplicatesGet** | **GET** /leads/{leadId}/activity/duplicates | Get a list of all lead duplicate activity

    *LeadsApi* | **leadsLeadIdActivityLinksGet** | **GET** /leads/{leadId}/activity/links | Get a list of all lead links activity

    *LeadsApi* | **leadsLeadIdActivitySourceGet** | **GET** /leads/{leadId}/activity/source | Get a list of all lead source activity

    *LeadsApi* | **leadsLeadIdActivityStatusGet** | **GET** /leads/{leadId}/activity/status | Get a list of all lead status activity

    *LeadsApi* | **leadsLeadIdApplicationsApplicationIdPopulatePost** | **POST** /leads/{leadId}/applications/{applicationId}/populate | Populate PDF Document

    *LeadsApi* | **leadsLeadIdAppointmentsGet** | **GET** /leads/{leadId}/appointments | Get lead appointments

    *LeadsApi* | **leadsLeadIdAppointmentsPost** | **POST** /leads/{leadId}/appointments | Create a lead appointment

    *LeadsApi* | **leadsLeadIdDocumentsDocumentIdGet** | **GET** /leads/{leadId}/documents/{documentId} | Download a document

    *LeadsApi* | **leadsLeadIdDocumentsGet** | **GET** /leads/{leadId}/documents | Get a list of available documents

    *LeadsApi* | **leadsLeadIdDocumentsPost** | **POST** /leads/{leadId}/documents | Upload a document

    *LeadsApi* | **leadsLeadIdEmailsTemplateIdPost** | **POST** /leads/{leadId}/emails/{templateId} | Send an email to lead with template

    *LeadsApi* | **leadsLeadIdGet** | **GET** /leads/{leadId} | Get detailed lead information

    *LeadsApi* | **leadsLeadIdMailboxEmailIdAttachmentAttachmentIdGet** | **GET** /leads/{leadId}/mailbox/{emailId}/attachment/{attachmentId} | Download a mailbox email attachment

    *LeadsApi* | **leadsLeadIdNotesGet** | **GET** /leads/{leadId}/notes | Get lead notes

    *LeadsApi* | **leadsLeadIdNotesPost** | **POST** /leads/{leadId}/notes | Create a lead note

    *LeadsApi* | **leadsLeadIdPatch** | **PATCH** /leads/{leadId} | Update a lead

    *LeadsApi* | **leadsLeadIdSignaturesApplicationIdGeneratePost** | **POST** /leads/{leadId}/signatures/{applicationId}/generate | Generate an e-signature document

    *LeadsApi* | **leadsLeadIdSignaturesApplicationIdSendPost** | **POST** /leads/{leadId}/signatures/{applicationId}/send | Send an e-signature document

    *LeadsApi* | **leadsLeadIdSignaturesGet** | **GET** /leads/{leadId}/signatures | Get a list of all lead e-signatures documents

    *LeadsApi* | **leadsLeadIdSmsTemplateIdPost** | **POST** /leads/{leadId}/sms/{templateId} | Send an SMS to lead with selected SMS template

    *LeadsApi* | **leadsLeadIdTasksGet** | **POST** /leads/{leadId}/tasks | Create a lead task

    *LeadsApi* | **leadsLeadIdUsersGet** | **GET** /leads/{leadId}/users | Get a list of assigned users

    *LeadsApi* | **leadsLeadIdUsersPost** | **POST** /leads/{leadId}/users | Assign a user

    *LeadsApi* | **leadsLeadIdUsersUserIdDelete** | **DELETE** /leads/{leadId}/users/{userId} | Unassign a user from a lead

    *LeadsApi* | **leadsPost** | **POST** /leads | Create a lead

    *LeadsApi* | **leadsSignaturesApplicationIdDownloadGet** | **GET** /leads/signatures/{applicationId}/download | Download an e-signature document

    *LeadsApi* | **leadsSmsTemplatesGet** | **GET** /leads/sms/templates | Get list of SMS templates

    *LeadsApi* | **leadsSourcesGet** | **GET** /leads/sources | Get a list of available sources

    *LeadsApi* | **leadsStatusesGet** | **GET** /leads/statuses | Get a list of available statuses

    *LeadsApi* | **leadsUsersGet** | **GET** /leads/users | Get a list of available users
    
    *MerchantsApi* | **merchantsGet** | **GET** /merchants | Get a list of merchants

    *MerchantsApi* | **merchantsMerchantNumberChargebacksGet** | **GET** /merchants/{merchantNumber}/chargebacks | Get a list of chargebacks

    *MerchantsApi* | **merchantsMerchantNumberGet** | **GET** /merchants/{merchantNumber} | Get detailed merchant information

    *MerchantsApi* | **merchantsMerchantNumberPatch** | **PATCH** /merchants/{merchantNumber} | Update an existing merchant

    *MerchantsApi* | **merchantsMerchantNumberRetrievalsGet** | **GET** /merchants/{merchantNumber}/retrievals | Get a list of retrievals

    *MerchantsApi* | **merchantsMerchantNumberStatementsGet** | **GET** /merchants/{merchantNumber}/statements | Get a list of statements

    *MerchantsApi* | **merchantsMerchantNumberStatementsStatementIdGet** | **GET** /merchants/{merchantNumber}/statements/{statementId} | Download a statement

    *MerchantsApi* | **merchantsMerchantNumberTransactionsGet** | **GET** /merchants/{merchantNumber}/transactions | Get a list of batches and transactions
    
    *SubscriptionsApi* | **subscriptionsGet** | **GET** /subscriptions | Return a list of subscriptions

    *SubscriptionsApi* | **subscriptionsPost** | **POST** /subscriptions | Create a subscription

    *SubscriptionsApi* | **subscriptionsSampleApiUpdatedGet** | **GET** /subscriptions/sample/api.updated | Data sample for the \&quot;api.updated\&quot; event

    *SubscriptionsApi* | **subscriptionsSampleApplicationCreatedGet** | **GET** /subscriptions/sample/turboapp.submitted | Data sample for the \&quot;turboapp.submitted\&quot; event

    *SubscriptionsApi* | **subscriptionsSampleApplicationUpdatedGet** | **GET** /subscriptions/sample/turboapp.updated | Data sample for the \&quot;turboapp.updated\&quot; event

    *SubscriptionsApi* | **subscriptionsSampleLeadCreatedGet** | **GET** /subscriptions/sample/lead.created | Data sample for the \&quot;lead.created\&quot; event

    *SubscriptionsApi* | **subscriptionsSampleLeadDeletedGet** | **GET** /subscriptions/sample/lead.deleted | Data sample for the \&quot;lead.deleted\&quot; event

    *SubscriptionsApi* | **subscriptionsSampleLeadDocumentUploadedGet** | **GET** /subscriptions/sample/lead.document.uploaded | Data sample for the \&quot;lead.document.uploaded\&quot; event

    *SubscriptionsApi* | **subscriptionsSampleLeadEmailReceivedGet** | **GET** /subscriptions/sample/lead.email.received | Data sample for the \&quot;lead.email.received\&quot; event

    *SubscriptionsApi* | **subscriptionsSampleLeadNoteAddedGet** | **GET** /subscriptions/sample/lead.note.added | Data sample for the \&quot;lead.note.added\&quot; event

    *SubscriptionsApi* | **subscriptionsSampleLeadRestoredGet** | **GET** /subscriptions/sample/lead.restored | Data sample for the \&quot;lead.restored\&quot; event

    *SubscriptionsApi* | **subscriptionsSampleLeadStatusUpdatedGet** | **GET** /subscriptions/sample/lead.status.updated | Data sample for the \&quot;lead.status.updated\&quot; event

    *SubscriptionsApi* | **subscriptionsSampleLeadUpdatedGet** | **GET** /subscriptions/sample/lead.updated | Data sample for the \&quot;lead.updated\&quot; event

    *SubscriptionsApi* | **subscriptionsSubscriptionIdDelete** | **DELETE** /subscriptions/{subscriptionId} | Delete a subscription

    *SubscriptionsApi* | **subscriptionsSubscriptionIdGet** | **GET** /subscriptions/{subscriptionId} | Return a subscription by its id

    *SubscriptionsApi* | **subscriptionsSubscriptionIdPatch** | **PATCH** /subscriptions/{subscriptionId} | Update a subscription

    # Change Log

     ### 1.14.0 (2022-08-23)

     #### Updated:

     * Added `details.fields.uid` field to the `Get detailed lead information` endpoint **Link:** [#/paths/~1leads~1{leadId}/get](https://www.mycoastalpay.com/api/#/paths/~1leads~1{leadId}/get)





     ### 1.13.0 (2022-09-12)

     #### Updated:

     * Added `notify_users` field to the `Create a lead note` request **Link:** [#/paths/~1leads~1{leadId}~1notes/post](https://www.mycoastalpay.com/api/#/paths/~1leads~1{leadId}~1notes/post)





     ### 1.12.0 (2022-09-12)

     #### Updated:

     * Added `notify_users` field to `UploadDocumentRequest` **Link:** [#/paths/~1leads~1{leadId}~1documents/post](https://www.mycoastalpay.com/api/#/paths/~1leads~1{leadId}~1documents/post)





     ### 1.11.2 (2022-09-12)

     #### Created:

     * Added new subscriptions for `ticket.deleted` event. **Link:** [#/paths/~1subscriptions~1sample~1ticket.deleted/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.deleted/get)





     ### 1.11.1 (2022-09-12)

     #### Updated:

     * Added TimeZone field type to Create a new lead field endpoint **Link:** [#/paths/~1leads~1fields/post](https://www.mycoastalpay.com/api/#/paths/~1leads~1fields/post)

     * Added TimeZone field type to Update a lead field endpoint **Link:** [#/paths/~1leads~1fields~1{fieldId}/patch](https://www.mycoastalpay.com/api/#/paths/~1leads~1fields~1{fieldId}/patch)





     ### 1.11.0 (2022-09-12)

     #### Created:

     * Added endpoint to get merchant's equipment **Link:** [#/paths/~1merchants~1{merchantNumber}~1equipment/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1equipment/get)

     * Added TurboApp Equipment Updated event **Link:** [#/paths/~1subscriptions~1sample~1turboapp.equipment.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1turboapp.equipment.updated/get)



     #### Updated:

     * Updated TurboApp Equipment Created event to include equipment list **Link:** [#/paths/~1subscriptions~1sample~1turboapp.equipment.created/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1turboapp.equipment.created/get)

     * Updated Receive notification when a merchant is approved event to include equipment list **Link:** [#/paths/~1subscriptions~1sample~1turboapp.approved/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1turboapp.approved/get)





     ### 1.10.6 (2022-09-12)

     #### Updated:

     * Added `reject_description` property to the batches and transactions list response. **Link:** [#/paths/~1merchants~1{merchantNumber}~1transactions/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1transactions/get)





     ### 1.10.5 (2022-09-12)

     #### Updated:

     * Added `assignedMergeWithDefault` option to the `create helpdesk ticket` endpoint **Link:** [#/paths/~1helpdesk/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/post)

     * Added `assignedMergeWithDefault` option to the `update helpdesk ticket` endpoint **Link:** [#/paths/~1helpdesk~1{ticketId}/patch](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/patch)





     ### 1.10.4 (2022-05-02)

     #### Updated:

     * Added a fields filter to a leads list endpoint **Link:** [#/paths/~1leads/get](https://www.mycoastalpay.com/api/#/paths/~1leads/get)





     ### 1.10.3 (2022-04-29)

     #### Updated:

     * Added user activity indicator to the `get residuals line items` endpoint **Link:** [#/paths/~1residuals~1lineitems~1{year}~1{month}/get](https://www.mycoastalpay.com/api/#/paths/~1residuals~1lineitems~1{year}~1{month}/get)





     ### 1.10.2 (2022-04-29)

     #### Updated:

     * Updated endpoint Create Lead, added an users_emails field. **Link:** [#/paths/~1leads/post](https://www.mycoastalpay.com/api/#/paths/~1leads/post)





     ### 1.10.1 (2022-04-29)

     #### Updated:

     * Updated endpoint Assign a user to a lead by email **Link:** [#/paths/~1leads~1{leadId}~1users/post](https://www.mycoastalpay.com/api/#/paths/~1leads~1{leadId}~1users/post)





     ### 1.10.0 (2022-04-06)

     #### Created:

     * Added an endpoint for merchant creation and assigning users. **Link:** [#/paths/~1merchants/post](https://www.mycoastalpay.com/api/#/paths/~1merchants/post)

     * Added an endpoint for getting assigned users to merchant **Link:** [#/paths/~1merchants~1{merchantNumber}~1users/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1users/get)

     * Added an endpoint for updating merchant details **Link:** [#/paths/~1merchants~1{merchantNumber}~1details/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1details/post)

     * Added an endpoint for transactions import **Link:** [#/paths/~1merchants~1{merchantNumber}~1transactions/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1transactions/post)

     * Added an endpoint for adjustments import **Link:** [#/paths/~1merchants~1{merchantNumber}~1adjustments/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1adjustments/post)

     * Added an endpoint for getting a list of batches **Link:** [#/paths/~1merchants~1{merchantNumber}~1authorizations/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1authorizations/get)

     * Added an endpoint for getting a list of authorizations **Link:** [#/paths/~1merchants~1{merchantNumber}~1authorizations~1{batchId}~1transactions/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1authorizations~1{batchId}~1transactions/get)

     * Added an endpoint for batches and authorizations import **Link:** [#/paths/~1merchants~1{merchantNumber}~1authorizations/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1authorizations/post)

     * Added an endpoint for chargebacks import **Link:** [#/paths/~1merchants~1{merchantNumber}~1chargebacks/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1chargebacks/post)

     * Added an endpoint for retrievals import **Link:** [#/paths/~1merchants~1{merchantNumber}~1retrievals/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1retrievals/post)

     * Added an endpoint for merchant statements import **Link:** [#/paths/~1merchants~1{merchantNumber}~1statements/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1statements/post)

     * Added an endpoint for 1099k statements import **Link:** [#/paths/~1merchants~1{merchantNumber}~1statements~11099k/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1statements~11099k/post)

     * Added an endpoint for memos import **Link:** [#/paths/~1merchants~1{merchantNumber}~1memos/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1memos/post)

     * Added an endpoint for getting Processor and DataSource available for assigning to merchants **Link:** [#/paths/~1processors/get](https://www.mycoastalpay.com/api/#/paths/~1processors/get)





     ### 1.9.0 (2022-04-06)

     #### Created:

     * Added endpoint to get lead details from a specific tab **Link:** [#/paths/~1leads~1{leadId}~1tabs~1{tabId}~1fields/get](https://www.mycoastalpay.com/api/#/paths/~1leads~1{leadId}~1tabs~1{tabId}~1fields/get)





     ### 1.7.0 (2021-12-08)

     #### Updated:

     * Added TurboApp Equipment Created event **Link:** [#/paths/~1subscriptions~1sample~1turboapp.equipment.created/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1turboapp.equipment.created/get)





     ### 1.6.10 (2021-11-24)

     #### Updated:

     * Updated pagination on get list of statements endpoint. **Link:** [#/paths/~1merchants~1{merchantNumber}~1statements/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1statements/get)





     ### 1.6.9 (2021-08-02)

     #### Updated:

     * Added `void_reject_chargeback` property to the batches and transactions list response. **Link:** [#/paths/~1merchants~1{merchantNumber}~1transactions/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1transactions/get)





     ### 1.6.8 (2021-08-04)

     #### Created:

     * Added `Delete record from a lead record set` endpoint **Link:** [#/paths/~1leads~1{leadId}~1records~1{catId}~1{recordId}/delete](https://www.mycoastalpay.com/api/#/paths/~1leads~1{leadId}~1records~1{catId}~1{recordId}/delete)





     ### 1.6.7 (2021-07-20)

     #### Updated:

     * Added `unassigned` property to the chargebacks list response. **Link:** [#/paths/~1helpdesk/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/get)





     ### 1.6.6 (2021-07-14)

     #### Updated:

     * Added `adjustments` property to the merchants list of batches and transactions. **Link:** [#/paths/~1merchants~1{merchantNumber}~1transactions/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1transactions/get)





     ### 1.6.5 (2021-07-02)

     #### Updated:

     * Added `type` property to the chargebacks list response. **Link:** [#/paths/~1merchants~1{merchantNumber}~1chargebacks/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1chargebacks/get)





     ### 1.6.4 (2021-05-06)

     #### Updated:

     * Added `terminal_number` property to the merchants list of batches and transactions. **Link:** [#/paths/~1merchants~1{merchantNumber}~1transactions/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1transactions/get)





     ### 1.6.3 (2021-04-26)

     #### Updated:

     * Added `created_username`,`modified_username`, and `resolved_username` properties to the ticket creation endpoint response. **Link:** [#/paths/~1helpdesk/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/post)

     * Added `created_username`,`modified_username`, and `resolved_username` properties to the Helpdesk tickets list endpoint. **Link:** [#/paths/~1helpdesk/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/get)

     * Added `created_username`,`modified_username`, and `resolved_username` properties to the Helpdesk tickets details endpoint. **Link:** [#/paths/~1helpdesk~1{ticketId}/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/get)

     * Added `created_username`,`modified_username`, and `resolved_username` to the Helpdesk ticket update endpoint. **Link:** [#/paths/~1helpdesk~1{ticketId}/patch](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/patch)





     ### 1.6.2 (2021-05-31)

     #### Created:

     * Added `end_date` filter to deposits endpoint **Link:** [#/paths/~1merchants~1{merchantNumber}~1deposits~1{year}~1{month}/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1deposits~1{year}~1{month}/get)





     ### 1.6.1 (2021-04-02)

     #### Updated:

     * Increased API Rate limit to 500 request per minute **Link:** [#section/Limiting](https://www.mycoastalpay.com/api/#section/Limiting)





     ### 1.6.0 (2021-03-02)

     #### Created:

     * Added `Get pricing templates` endpoint **Link:** [#/paths/~1leads~1pricing_templates/get](https://www.mycoastalpay.com/api/#/paths/~1leads~1pricing_templates/get)





     ### 1.5.21 (2021-03-19)

     #### Updated:

     * Added new properties to the chargebacks list response **Link:** [#/paths/~1merchants~1{merchantNumber}~1chargebacks/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1chargebacks/get)

     * Added new properties to the retrievals list response **Link:** [#/paths/~1merchants~1{merchantNumber}~1retrievals/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1retrievals/get)





     ### 1.5.20 (2021-02-12)

     #### Updated:

     * Added `filename` property to the `lead.document.uploaded` subscription response **Link:** [#/paths/~1subscriptions~1sample~1lead.document.uploaded/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1lead.document.uploaded/get)





     ### 1.5.19 (2021-02-17)

     #### Updated:

     * Added deposits endpoint **Link:** [#/paths/~1merchants~1{merchantNumber}~1deposits~1{year}~1{month}/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1deposits~1{year}~1{month}/get)

     * Added `authorization_code` property to the chargeback response **Link:** [#/paths/~1merchants~1{merchantNumber}~1chargebacks/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1chargebacks/get)





     ### 1.5.18 (2021-01-14)

     #### Updated:

     * Added `id` and `invoice_number` properties to the `transactions` section of the transactions response **Link:** [#/paths/~1merchants~1{merchantNumber}~1transactions/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1transactions/get)





     ### 1.5.17 (2021-03-17)

     #### Updated:

     * Added `id` and `invoice_number` properties to the `transactions` section of the transactions response **Link:** [#/paths/~1merchants~1{merchantNumber}~1transactions/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1transactions/get)

     * Added `id` and `reply_form` properties to the chargebacks response **Link:** [#/paths/~1merchants~1{merchantNumber}~1chargebacks/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1chargebacks/get)

     * Added the `id` property to the retrievals list response **Link:** [#/paths/~1merchants~1{merchantNumber}~1retrievals/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1retrievals/get)



     #### Created:

     * Added an endpoint for getting detailed chargeback information **Link:** [#/paths/~1merchants~1{merchantNumber}~1chargebacks~1{caseNumber}/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1chargebacks~1{caseNumber}/get)

     * Added an endpoint for Reply To Chargeback Case - Dispute Chargeback Case **Link:** [#/paths/~1merchants~1{merchantNumber}~1chargebacks~1{caseNumber}~1dispute_reverse/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1chargebacks~1{caseNumber}~1dispute_reverse/post)

     * Added an endpoint for Reply To Chargeback Case - Credit Issued **Link:** [#/paths/~1merchants~1{merchantNumber}~1chargebacks~1{caseNumber}~1credit_issued/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1chargebacks~1{caseNumber}~1credit_issued/post)

     * Added an endpoint for Reply To Chargeback Case - Accept Chargeback **Link:** [#/paths/~1merchants~1{merchantNumber}~1chargebacks~1{caseNumber}~1accept/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1chargebacks~1{caseNumber}~1accept/post)

     * Added an endpoint for getting detailed chargeback information **Link:** [#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}/get)

     * Added an endpoint for Reply To Retrieval Case - Retrieval Response **Link:** [#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}~1response/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}~1response/post)

     * Added an endpoint for Reply To Retrieval Case - Retrieval Response with Signature **Link:** [#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}~1response_with_signature/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}~1response_with_signature/post)

     * Added an endpoint for Reply To Retrieval Case - Unable to Fulfill Retrieval Case Request **Link:** [#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}~1unable_to_fulfill_request/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}~1unable_to_fulfill_request/post)

     * Added an endpoint for Reply To Retrieval Case - Unable to Locate Retrieval Case **Link:** [#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}~1unable_to_locate_retrieval/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}~1unable_to_locate_retrieval/post)

     * Added an endpoint for Reply To Retrieval - Credit Issued **Link:** [#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}~1credit_issued/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}~1credit_issued/post)

     * Added an endpoint for Reply To Retrieval Case - Imprint and Signature **Link:** [#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}~1imprint_and_signature/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}~1imprint_and_signature/post)

     * Added an endpoint for Reply To Retrieval Case - Responding by Other Means **Link:** [#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}~1responding_by_other_means/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}~1responding_by_other_means/post)

     * Added an endpoint for Reply To Retrieval Case - Add User Notes/Images **Link:** [#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}~1add_notes_images/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}~1add_notes_images/post)

     * Added an endpoint for the file upload **Link:** [#/paths/~1merchants~1files/post](https://www.mycoastalpay.com/api/#/paths/~1merchants~1files/post)

     * Added an endpoint for Download chargeback case files **Link:** [#/paths/~1merchants~1{merchantNumber}~1chargebacks~1{caseNumber}~1files~1{fileId}/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1chargebacks~1{caseNumber}~1files~1{fileId}/get)

     * Added an endpoint for Download retrieval case files **Link:** [#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}~1files~1{fileId}/get](https://www.mycoastalpay.com/api/#/paths/~1merchants~1{merchantNumber}~1retrievals~1{caseNumber}~1files~1{fileId}/get)

     * Added new subscription for receiving a notification when a new chargeback case created **Link:** [#/paths/~1subscriptions~1sample~1chargeback.added/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1chargeback.added/get)

     * Added new subscription for receiving a notification when chargeback case status changed **Link:** [#/paths/~1subscriptions~1sample~1chargeback.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1chargeback.updated/get)

     * Added new subscription for receiving a notification in 7/3/1 days before the chargeback case due date **Link:** [#/paths/~1subscriptions~1sample~1chargeback.reminder/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1chargeback.reminder/get)

     * Added new subscription for receiving a notification when a new retrieval case created **Link:** [#/paths/~1subscriptions~1sample~1retrieval.added/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1retrieval.added/get)

     * Added new subscription for receiving a notification when retrieval case status changed **Link:** [#/paths/~1subscriptions~1sample~1retrieval.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1retrieval.updated/get)

     * Added new subscription for receiving a notification in 7/3/1 days before the retrieval case due date **Link:** [#/paths/~1subscriptions~1sample~1retrieval.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1retrieval.updated/get)





     ### 1.5.16 (2020-12-11)

     #### Updated:

     * Renamed task priority from "Low" to "Normal" **Link:** [#/paths/~1leads~1{leadId}~1tasks/post](https://www.mycoastalpay.com/api/#/paths/~1leads~1{leadId}~1tasks/post)





     ### 1.5.15 (2021-01-18)

     #### Updated:

     * Added `due` value for `sort_by` and `date_filter` parameters on the get a list of Tickets endpoint **Link:** [#/paths/~1helpdesk/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/get)

     * Added `due` parameter on the get a list of Tickets endpoint **Link:** [#/paths/~1helpdesk/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/get)

     * Added `due` parameter on the get detailed information of Tickets endpoint **Link:** [#/paths/~1helpdesk~1{ticketId}/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/get)

     * Added `only_business_days` parameter on the get a list of Tickets endpoint **Link:** [#/paths/~1helpdesk/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/get)

     * Added `only_business_days` parameter on the get detailed information of Tickets endpoint **Link:** [#/paths/~1helpdesk~1{ticketId}/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/get)

     * Added `only_business_days` property to the Ticket on the Ticket create endpoint **Link:** [#/paths/~1helpdesk/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/post)

     * Added `only_business_days` property to the Ticket on the Ticket update endpoint **Link:** [#/paths/~1helpdesk~1{ticketId}/patch](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/patch)

     * Added `only_business_days` property to the Ticket Type on the get a list of Ticket Type endpoint **Link:** [#/paths/~1helpdesk~1types/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1types/get)

     * Added `only_business_days` parameter on the get detailed information of Ticket Type endpoint **Link:** [#/paths/~1helpdesk~1types~1{typeId}/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1types~1{typeId}/get)

     * Added `only_business_days` property to the Ticket Type on the Ticket Type create endpoint **Link:** [#/paths/~1helpdesk~1types/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1types/post)

     * Added `only_business_days` property to the Ticket Type on the Ticket Type update endpoint **Link:** [#/paths/~1helpdesk~1types~1{typeId}/patch](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1types~1{typeId}/patch)

     * Added `attached_files` property to the Ticket on the Ticket create endpoint **Link:** [#/paths/~1helpdesk/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/post)

     * Added `attached_files` property to the Ticket Checklist on the Ticket create endpoint **Link:** [#/paths/~1helpdesk/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/post)

     * Added `attached_files` property to the Ticket Checklist on the Ticket update endpoint **Link:** [#/paths/~1helpdesk~1{ticketId}/patch](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/patch)

     * Added `attached_files` property to the Ticket Comment on the Comment create endpoint **Link:** [#/paths/~1helpdesk~1{ticketId}~1comment/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}~1comment/post)





     ### 1.5.14 (2020-11-26)

     #### Updated:

     * Added `template_id`, `completed_by`, and `completed_at` properties to the `checklist` section of the ticket create response **Link:** [#/paths/~1helpdesk/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/post)

     * Added `template_id`, `completed_by`, and `completed_at` properties to the `checklist` section of ticket details response **Link:** [#/paths/~1helpdesk~1{ticketId}/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/get)

     * Added `template_id`, `completed_by`, and `completed_at` properties to the `checklist` section of ticket update response **Link:** [#/paths/~1helpdesk~1{ticketId}/patch](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/patch)

     * Added `template_id`, `completed_by`, and `completed_at` properties to the `checklist` section of ticket's checklist updated subscription response **Link:** [#/paths/~1subscriptions~1sample~1ticket.checklist.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.checklist.updated/get)





     ### 1.5.13 (2020-11-20)

     #### Updated:

     * Added `priority` property to the Ticket Type on the Ticket Type create endpoint **Link:** [#/paths/~1helpdesk~1types/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1types/post)

     * Added `priority` property to the Ticket Type on the Ticket Type update endpoint **Link:** [#/paths/~1helpdesk~1types~1{typeId}/patch](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1types~1{typeId}/patch)





     ### 1.5.12 (2020-11-02)

     #### Updated:

     * Changed `due_date` property to the datetime format on the ticket create endpoint **Link:** [#/paths/~1helpdesk/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/post)

     * Changed `due_date` property to the datetime format on the ticket update endpoint **Link:** [#/paths/~1helpdesk~1{ticketId}/patch](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/patch)





     ### 1.5.11 (2020-10-20)

     #### Updated:

     * Added `notify_assigned_users` property for ticket creation payload. **Link:** [#/paths/~1helpdesk/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/post)





     ### 1.5.10 (2020-10-19)

     #### Updated:

     * Added `group_id` property for ticket creation payload. **Link:** [#/paths/~1helpdesk/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/post)

     * Added `group_id` property for ticket update payload. **Link:** [#/paths/~1helpdesk~1{ticketId}/patch](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/patch)





     ### 1.5.9 (2020-11-02)

     #### Updated:

     * Added `new_files` property for ticket update payload. **Link:** [#/paths/~1helpdesk~1{ticketId}/patch](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/patch)

     * Added `new_files` property for ticket type update payload. **Link:** [#/paths/~1helpdesk~1types~1{typeId}/patch](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1types~1{typeId}/patch)





     ### 1.5.8 (2020-10-20)

     #### Updated:

     * Added `preview_images` property for ticket request and response data. **Link:** [#/paths/~1helpdesk/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/post)

     * Added `preview_images` property for ticket comment request and response data. **Link:** [#/paths/~1helpdesk~1{ticketId}~1comment/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}~1comment/post)

     * Added `preview_images` property for ticket and ticket comment properties. **Link:** [#/paths/~1helpdesk~1{ticketId}~1comment/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}~1comment/post)

     * Added `preview_images` property for ticket request and response data. **Link:** [#/paths/~1helpdesk~1{ticketId}/patch](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/patch)





     ### 1.5.7 (2020-10-05)

     #### Updated:

     * Added `notify_assigned_users` property for ticket creation payload. **Link:** [#/paths/~1helpdesk/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/post)





     ### 1.5.5 (2020-07-23)

     #### Updated:

     * Added endpoint with file labels what can be used for document upload. **Link:** [#/paths/~1leads~1file_labels/get](https://www.mycoastalpay.com/api/#/paths/~1leads~1file_labels/get)





     ### 1.5.5 (2020-10-20)

     #### Updated:

     * Added endpoint with file labels what can be used for document upload. **Link:** [#/paths/~1helpdesk~1{ticketId}~1assignments/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}~1assignments/get)





     ### 1.5.4 (2020-07-13)

     #### Updated:

     * Added `files_count` property to the ticket create endpoint response. **Link:** [#/paths/~1helpdesk/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/post)

     * Added `files_count` property to the response of ticket list endpoint. **Link:** [#/paths/~1helpdesk/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/get)

     * Added `files_count` property to the response of ticket detailed information endpoint. **Link:** [#/paths/~1helpdesk~1{ticketId}/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/get)

     * Added `files_count` property to the ticket update endpoint response. **Link:** [#/paths/~1helpdesk~1{ticketId}/patch](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/patch)

     * Added `files_count` property to the ticket.created subscription data. **Link:** [#/paths/~1subscriptions~1sample~1ticket.created/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.created/get)

     * Added `files_count` property to the ticket.updated subscription data. **Link:** [#/paths/~1subscriptions~1sample~1ticket.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.updated/get)

     * Added `files_count` property to the ticket.resolved subscription data. **Link:** [#/paths/~1subscriptions~1sample~1ticket.resolved/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.resolved/get)

     * Added `files_count` property to the ticket.checklist.updated subscription data. **Link:** [#/paths/~1subscriptions~1sample~1ticket.checklist.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.checklist.updated/get)





     ### 1.5.3 (2020-07-06)

     #### Updated:

     * Added `search` filter to the tickets list endpoint. **Link:** [#/paths/~1helpdesk/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/get)





     ### 1.5.2 (2020-07-10)

     #### Updated:

     * Added `due_date` property to the ticket create endpoint request and response. **Link:** [#/paths/~1helpdesk/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/post)

     * Added `due_date` property to the response of ticket list endpoint. **Link:** [#/paths/~1helpdesk/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/get)

     * Added `due_date` property to the response of ticket detailed information endpoint. **Link:** [#/paths/~1helpdesk~1{ticketId}/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/get)

     * Added `due_date` property to the ticket update endpoint request and response. **Link:** [#/paths/~1helpdesk~1{ticketId}/patch](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/patch)

     * Added `due_date` property to the ticket.created subscription data. **Link:** [#/paths/~1subscriptions~1sample~1ticket.created/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.created/get)

     * Added `due_date` property to the ticket.updated subscription data. **Link:** [#/paths/~1subscriptions~1sample~1ticket.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.updated/get)

     * Added `due_date` property to the ticket.resolved subscription data. **Link:** [#/paths/~1subscriptions~1sample~1ticket.resolved/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.resolved/get)

     * Added `due_date` property to the ticket.checklist.updated subscription data. **Link:** [#/paths/~1subscriptions~1sample~1ticket.checklist.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.checklist.updated/get)





     ### 1.5.1 (2020-08-10)

     #### Created:

     * Added a Residuals API to work with your residuals reports. **Link:** [#tag/Residuals](https://www.mycoastalpay.com/api/#tag/Residuals)





     ### 1.4.9 (2020-06-26)

     #### Updated:

     * Added `hide_resolved` filter to the tickets list endpoint. **Link:** [#/paths/~1helpdesk/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/get)





     ### 1.4.8 (2020-06-12)

     #### Updated:

     * Added `set_for`, `set_at`, `set_by`, `modified`, `modified_by`, `date_end`, `confirmed_by`, `seen_by`, `rescheduled`, `rescheduled_by`, and `rescheduled_count` properties to the lead appointments endpoint response. **Link:** [#/paths/~1leads~1{leadId}~1appointments/get](https://www.mycoastalpay.com/api/#/paths/~1leads~1{leadId}~1appointments/get)

     * Added `set_for`, `set_by`, `modified_by`, `confirmed_by`, `seen_by`, `rescheduled_by`, `rescheduled_count`,  `date_filter`, `start_date`, `end_date`, and `done` filters to the lead appointments endpoint. **Link:** [#/paths/~1leads~1{leadId}~1appointments/get](https://www.mycoastalpay.com/api/#/paths/~1leads~1{leadId}~1appointments/get)

     * Added sorting to the lead appointments endpoint. **Link:** [#/paths/~1leads~1{leadId}~1appointments/get](https://www.mycoastalpay.com/api/#/paths/~1leads~1{leadId}~1appointments/get)

     * Marked `user` property as deprecated on the lead appointments endpoint response. **Link:** [#/paths/~1leads~1{leadId}~1appointments/get](https://www.mycoastalpay.com/api/#/paths/~1leads~1{leadId}~1appointments/get)





     ### 1.4.7 (2020-05-13)

     #### Updated:

     * Added `old_status_id` to lead status activity endpoint. **Link:** [#/paths/~1leads~1{leadId}~1activity~1status/get](https://www.mycoastalpay.com/api/#/paths/~1leads~1{leadId}~1activity~1status/get)

     * Added `new_status_id` to lead status activity endpoint. **Link:** [#/paths/~1leads~1{leadId}~1activity~1status/get](https://www.mycoastalpay.com/api/#/paths/~1leads~1{leadId}~1activity~1status/get)





     ### 1.4.6 (2020-05-01)

     #### Created:

     * Added `lead.signature.generated` subscription endpoint. **Link:** [#/paths/~1subscriptions~1sample~1lead.signature.generated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1lead.signature.generated/get)

     * Added `lead.signature.opened` subscription endpoint **Link:** [#/paths/~1subscriptions~1sample~1lead.signature.opened/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1lead.signature.opened/get)

     * Added `lead.signature.signed` subscription endpoint **Link:** [#/paths/~1subscriptions~1sample~1lead.signature.signed/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1lead.signature.signed/get)



     #### Updated:

     * Added `createdAt` and `createdBy` properties to the `lead.updated` subscription endpoint **Link:** [#/paths/~1subscriptions~1sample~1lead.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1lead.updated/get)

     * Added `email`, `contact`, `phone` and `address` properties to the `lead.deleted` subscription endpoint **Link:** [#/paths/~1subscriptions~1sample~1lead.deleted/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1lead.deleted/get)

     * Added `email`, `contact`, `phone` and `address` properties to the `lead.restored` subscription endpoint **Link:** [#/paths/~1subscriptions~1sample~1lead.restored/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1lead.restored/get)

     * Added `createdAt` and `createdBy` properties to the `lead.status.updated` subscription endpoint **Link:** [#/paths/~1subscriptions~1sample~1lead.status.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1lead.status.updated/get)





     ### 1.4.5 (2020-04-21)

     #### Updated:

     * Added `files` property to the ticket creation details endpoint response. **Link:** [#/paths/~1helpdesk/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/post)

     * Added `file` property for each checklist item in the ticket creation details endpoint response. **Link:** [#/paths/~1helpdesk/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/post)

     * Added `files` property to the Helpdesk tickets details endpoint. **Link:** [#/paths/~1helpdesk~1{ticketId}/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/get)

     * Added `files` property for each comment in the Helpdesk tickets details endpoint. **Link:** [#/paths/~1helpdesk~1{ticketId}/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/get)

     * Added `file` property for each checklist item in the Helpdesk tickets details endpoint. **Link:** [#/paths/~1helpdesk~1{ticketId}/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/get)

     * Added `files` property to the Helpdesk ticket update endpoint. **Link:** [#/paths/~1helpdesk~1{ticketId}/patch](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/patch)

     * Added `files` property for each comment in the Helpdesk ticket update endpoint. **Link:** [#/paths/~1helpdesk~1{ticketId}/patch](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/patch)

     * Added `file` property for each checklist item in the Helpdesk ticket update endpoint **Link:** [#/paths/~1helpdesk~1{ticketId}/patch](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1{ticketId}/patch)

     * Added `file` property for each checklist item in the ticket type creation details endpoint response. **Link:** [#/paths/~1helpdesk~1types/post](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1types/post)

     * Added `file` property for each checklist item on the ticket type endpoint. **Link:** [#/paths/~1helpdesk~1types~1{typeId}/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1types~1{typeId}/get)

     * Added `file` property for each checklist item on the ticket type update endpoint. **Link:** [#/paths/~1helpdesk~1types~1{typeId}/patch](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1types~1{typeId}/patch)

     * Added `files` property for ticket created subscription. **Link:** [#/paths/~1subscriptions~1sample~1ticket.created/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.created/get)

     * Added `files` property for ticket updated subscription. **Link:** [#/paths/~1subscriptions~1sample~1ticket.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.updated/get)

     * Added `files` property for ticket resolved subscription. **Link:** [#/paths/~1subscriptions~1sample~1ticket.resolved/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.resolved/get)

     * Added `files` property for ticket commented subscription. **Link:** [#/paths/~1subscriptions~1sample~1ticket.commented/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.commented/get)

     * Added `files` property for ticket checklist updated subscription. **Link:** [#/paths/~1subscriptions~1sample~1ticket.checklist.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.checklist.updated/get)

     * Added `file` property for each checklist item on checklist updated subscription. **Link:** [#/paths/~1subscriptions~1sample~1ticket.checklist.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.checklist.updated/get)



     #### Created:

     * Added endpoint for download attachments from Ticket Type **Link:** [#/paths/~1helpdesk~1types~1{typeId}~1download~1{attachmentId}/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk~1types~1{typeId}~1download~1{attachmentId}/get)





     ### 1.4.4 (2020-04-02)

     #### Updated:

     * Added `resolver` filter to the Helpdesk tickets endpoint. **Link:** [#/paths/~1helpdesk/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/get)





     ### 1.4.3 (2020-04-01)

     #### Updated:

     * Added `status_updated` option for `date_filter` filter to the Helpdesk tickets endpoint. **Link:** [#/paths/~1helpdesk/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/get)





     ### 1.4.2 (2020-03-27)

     #### Updated:

     * Added `lid` filter to the Helpdesk tickets endpoint. **Link:** [#/paths/~1helpdesk/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/get)

     * Added `mid` filter to the Helpdesk tickets endpoint. **Link:** [#/paths/~1helpdesk/get](https://www.mycoastalpay.com/api/#/paths/~1helpdesk/get)





     ### 1.4.1 (2020-03-20)

     #### Updated:

     * Added `hash` and `url` properties to the 'Send an e-signature document' endpoint. **Link:** [#/paths/~1leads~1{leadId}~1signatures~1{applicationId}~1send/post](https://www.mycoastalpay.com/api/#/paths/~1leads~1{leadId}~1signatures~1{applicationId}~1send/post)





     ### 1.4.0 (2020-03-05)

     #### Updated:

     * Added `assigned_users`, `lead_url` properties to the subscriptions response for the `lead.created` subscription. **Link:** [#/paths/~1subscriptions~1sample~1lead.created/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1lead.created/get)

     * Added `assigned_users`, `lead_url` properties to the subscriptions response for the `lead.updated` subscription. **Link:** [#/paths/~1subscriptions~1sample~1lead.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1lead.updated/get)

     * Added `assigned_users`, `lead_url` properties to the subscriptions response for the `lead.deleted` subscription. **Link:** [#/paths/~1subscriptions~1sample~1lead.deleted/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1lead.deleted/get)

     * Added `assigned_users`, `lead_url` properties to the subscriptions response for the `lead.restored` subscription. **Link:** [#/paths/~1subscriptions~1sample~1lead.restored/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1lead.restored/get)

     * Added `assigned_users`, `lead_url` properties to the subscriptions response for the `lead.status.updated` subscription. **Link:** [#/paths/~1subscriptions~1sample~1lead.status.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1lead.status.updated/get)

     * Added `assigned_users`, `lead_url` properties to the subscriptions response for the `lead.note.added` subscription. **Link:** [#/paths/~1subscriptions~1sample~1lead.note.added/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1lead.note.added/get)

     * Added `assigned_users`, `lead_url` properties to the subscriptions response for the `lead.document.uploaded` subscription. **Link:** [#/paths/~1subscriptions~1sample~1lead.document.uploaded/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1lead.document.uploaded/get)

     * Added `assigned_users`, `lead_url` properties to the subscriptions response for the `lead.email.received` subscription. **Link:** [#/paths/~1subscriptions~1sample~1lead.email.received/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1lead.email.received/get)

     * Added `ticket_url` and `assigned_users` properties to the subscriptions response for the `ticket.created` subscription. **Link:** [#/paths/~1subscriptions~1sample~1ticket.created/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.created/get)

     * Added `ticket_url` and `assigned_users` properties to the subscriptions response for the `ticket.updated` subscription. **Link:** [#/paths/~1subscriptions~1sample~1ticket.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.updated/get)

     * Added `ticket_url` and `assigned_users` properties to the subscriptions response for the `ticket.resolved` subscription. **Link:** [#/paths/~1subscriptions~1sample~1ticket.resolved/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.resolved/get)

     * Added `ticket_url` and `assigned_users` properties to the subscriptions response for the `ticket.commented` subscription. **Link:** [#/paths/~1subscriptions~1sample~1ticket.commented/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.commented/get)

     * Added `ticket_url` and `assigned_users` properties to the subscriptions response for the `ticket.checklist.updated` subscription. **Link:** [#/paths/~1subscriptions~1sample~1ticket.checklist.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1ticket.checklist.updated/get)

     * Added `application_url`, `identifier` and `lid` properties to the subscriptions response for the `turboapp.submitted` subscription. **Link:** [#/paths/~1subscriptions~1sample~1turboapp.submitted/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1turboapp.submitted/get)

     * Added `application_url`, `identifier` and `lid` properties to the subscriptions response for the `turboapp.updated` subscription. **Link:** [#/paths/~1subscriptions~1sample~1turboapp.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1turboapp.updated/get)

     * Added `application_url`, `identifier` and `lid` properties to the subscriptions response for the `turboapp.approved` subscription. **Link:** [#/paths/~1subscriptions~1sample~1turboapp.approved/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1turboapp.approved/get)

     * Added `application_url`, `identifier` and `lid` properties to the subscriptions response for the `turboapp.declined` subscription. **Link:** [#/paths/~1subscriptions~1sample~1turboapp.declined/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1turboapp.declined/get)

     * Changed all subscriptions dates properties to the snake case **Link:** [#tag/Subscriptions](https://www.mycoastalpay.com/api/#tag/Subscriptions)





     ### 1.3.5 (2020-02-26)

     #### Created:

     * Added a Helpdesk API to work with your helpdesk data. **Link:** [#tag/Helpdesk](https://www.mycoastalpay.com/api/#tag/Helpdesk)





     ### 1.3.4 (2020-02-25)

     #### Updated:

     * Added a `lid` property to the "turboapp.submitted" subscription. **Link:** [#/paths/~1subscriptions~1sample~1turboapp.submitted/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1turboapp.submitted/get)





     ### 1.3.3 (2020-02-24)

     #### Updated:

     * Added a `salesRep` parameter to 'lead.status.updated' subscription. **Link:** [#/paths/~1subscriptions~1sample~1lead.status.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1lead.status.updated/get)





     ### 1.3.2 (2019-11-21)

     #### Updated:

     * Added a `expire` parameter to 'Generate an e-signature document' endpoint. **Link:** [#/paths/~1leads~1{leadId}~1signatures~1{applicationId}~1generate/post](https://www.mycoastalpay.com/api/#/paths/~1leads~1{leadId}~1signatures~1{applicationId}~1generate/post)

     * Added the ability to add multiple signers to the document and added an `expire` parameter to 'Send an e-signature document' endpoint. **Link:** [#/paths/~1leads~1{leadId}~1signatures~1{applicationId}~1send/post](https://www.mycoastalpay.com/api/#/paths/~1leads~1{leadId}~1signatures~1{applicationId}~1send/post)





     ### 1.3.1 (2019-11-18)

     #### Updated:

     * Rename subscriptions from "application.created" to "turboapp.submitted" and "application.updated" to "turboapp.updated". **Link:** [#/paths/~1subscriptions~1sample~1turboapp.submitted/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1turboapp.submitted/get)



     #### Created:

     * Added new subscriptions for "turboapp.approved" event. **Link:** [#/paths/~1subscriptions~1sample~1turboapp.approved/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1turboapp.approved/get)

     * Added new subscriptions for "turboapp.declined" event. **Link:** [#/paths/~1subscriptions~1sample~1turboapp.declined/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1turboapp.declined/get)





     ### 1.2.2 (2019-09-03)

     #### Updated:

     * Added a `per_page` property to all list endpoints.





     ### 1.2.1 (2019-08-26)

     #### Updated:

     * Added a `leads` property to merchants endpoint. **Link:** [#/paths/~1merchants/get](https://www.mycoastalpay.com/api/#/paths/~1merchants/get)





     ### 1.2.0 (2019-07-26)

     #### Updated:

     * The endpoint for creating API subscriptions has been updated. Status based options have been added to some events. **Link:** [#/paths/~1subscriptions/post](https://www.mycoastalpay.com/api/#/paths/~1subscriptions/post)

     * The endpoint for updating API subscriptions has been updated. Status based options have been added to some events. **Link:** [#/paths/~1subscriptions~1{subscriptionId}/patch](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1{subscriptionId}/patch)





     ### 1.1.0 (2019-07-24)

     #### Created:

     * Added an endpoint for getting SMS templates. **Link:** [#/paths/~1leads~1sms~1templates/get](https://www.mycoastalpay.com/api/#/paths/~1leads~1sms~1templates/get)

     * Added new subscriptions for `application.created` event **Link:** [#/paths/~1subscriptions~1sample~1application.created/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1application.created/get)

     * Added new subscriptions for `application.updated` event **Link:** [#/paths/~1subscriptions~1sample~1application.updated/get](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1application.updated/get)



     #### Updated:

     * Added a `sic_code` property to merchants endpoint **Link:** [#/paths/~1merchants/get](https://www.mycoastalpay.com/api/#/paths/~1merchants/get)





     ### 1.0.0 (2019-06-20)

     #### Created:

     * Added change log.







  version: 1.11.1

  contact:
    email: helpdesk@coastalpay.com
  x-logo:
    url: https://cdn.iriscrm.com/coastal/public/logos/www.mycoastalpay.com?v=20150919193143

servers:
- url: https://www.mycoastalpay.com/api/v1
  description: Production API

tags:
  - name: "E-Signature"
    description: "Connect with the E-Signature API to create workflows that send specific documents for e-signature documents.<br/><br/>Create field mappings between Lead fields to populate their respective PDF documents.<br/><br/>Receive notifications when documents are generated, opened, and signed by recipients."
  - name: "Helpdesk"
    description: "Connect with the Helpdesk API to work with your ticket data.  Helpdesk tickets are organized by ticket types.<br/><br/>Ticket types have properties such as assigned users, expected time to completion (SLA), and visibility to help you segment tickets based on job descriptions.<br/><br/>Get detailed helpdesk ticket information, perform updates, and manage attached files with ease by using the Helpdesk API."
  - name: "Leads"
    description: "Connect with the Leads API to interact with your lead data.  Includes management of fields, user assignments, status changes, tasks, appointments, email, text messaging, and document attachments.<br/><br/>Create custom reports without limits using the data already housed within your CRM."

  - name: "Merchants"
    description: "Populate your data warehouse programmatically through this Merchants API and interact with your merchant services portfolio.  Data points include merchant demographics, deposits, transactions, retrievals, chargebacks, and statements across supported processors.<br/><br/>Each merchant account is accessible by users through a set of permissions controlled on the User Class level.<br/><br/>Segment your portfolio of merchants by filters such as processor, data source, and processing status."

  - name: "Residuals"
    description: "Populate your data warehouse programmatically through this Residuals API and interact with your monthly residuals income calculations, line items, and user compensation data.<br/><br/>Line items give you control with the ability to add income or expense calculations that are outside of any residual reports.<br/><br/>Receive instant notifications when new residual reports are published or when line items are added."

  - name: "Dispute responder"
    description: ""

  
  - name: "Subscriptions"
    description: "Connect with the Subscriptions API to create, view, and manage your event notification subscriptions.  A webhook listener URL is required from you to be able to create the subscription and receive notifications.<br/><br/>Learn about API updates and new endpoints by subscribing to the [api.updated](https://www.mycoastalpay.com/api/#/paths/~1subscriptions~1sample~1api.updated/get) event.<br/><br/>Receive alerts in real-time including lead status changes, e-signature document actions, and helpdesk ticket changes.<br/><br/>Subscription API responses provide you with detailed information on a silver platter to avoid sorting through data unnecessarily."

components:
  securitySchemes:
    Token:
      type: apiKey
      in: header
      name: X-API-KEY
      description: Authentication token
  responses:
    UnauthorizedError:
      description: API key is missing or invalid
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Unauthenticated"
    ForbiddenError:
      description: Not enough permissions
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Access denied"
    NotFoundError:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Not found"
    ValidationError:
      description: Validation exception
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Validation exception"
    ServerError:
      description: Unexpected server error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Unexpected server error"
  schemas:
    CreateChargebacksRequest:
      type: object
      description: Chargeback fields
      required:
        - chargebacks
      properties:
        chargebacks:
          type: array
          items:
            type: object
            required:
              - chargeback_date
              - transaction_date
              - amount
              - card_number
              - reference_number
            properties:
              chargeback_date:
                type: string
                format: date
                example: '2021-12-22'
                description: "Chargeback date"
              transaction_date:
                type: string
                format: date
                example: '2021-12-13'
                description: "Chargeback Transaction date"
              respond_due_date:
                type: string
                format: date
                example: '2021-12-30'
                description: "Chargeback Respond due date"
              amount:
                type: number
                example: 20.22
                description: "Chargeback Amount"
              original_amount:
                type: number
                example: 10.11
                description: "Chargeback Original Amount"
              reason_code:
                type: string
                description: "Chargeback reason code"
              reason:
                type: string
                description: "Chargeback reason description"
              type:
                type: string
                description: "Chargeback type"
              case_status:
                type: string
                description: "Chargeback case status"
              case_type:
                type: string
                description: "Chargeback case type"
              case_number:
                type: string
                description: "Chargeback case number"
              item_type:
                type: string
                description: "Chargeback item type"
              document_status:
                type: string
                description: "Chargeback document status"
              family_id:
                type: string
                description: "Chargeback family id"
              reference_number:
                type: string
                example: "221779c4-e43a-4a93-aa21-55424e"
                description: "Chargeback Reference Number"
              is_credit:
                type: string
                enum: ["Yes", "Not"]
                description: "Is Credit?"
              card_number:
                $ref: "#/components/schemas/CardNumberObject"
    Chargeback:
      type: object
      properties:
        id:
          type: integer
          example: 123
          description: "Chargeback internal ID"
        merchant_id:
          type: string
          example: "48236605840"
          description: "Merchant ID"
        dba:
          type: string
          example: "Dummy Merchant DBA"
          description: "Merchant DBA"
        case_number:
          type: string
          example: "230880620"
          description: "Case number"
        chargeback_date:
          type: string
          format: date
          example: '01/21/2019'
          description: "Chargeback date"
        transaction_date:
          type: string
          format: date
          example: '01/21/2019'
          description: "Transaction date"
        respond_due:
          type: string
          format: date
          example: '01/21/2019'
          description: "Respond due date"
        amount:
          type: string
          example: "1570.00"
          description: "Amount"
        original_amount:
          type: string
          example: "10.00"
          description: "Original amount of transaction"
        currency:
          type: string
          description: "Transaction currency"
        reason:
          type: string
          description: "Chargeback reason"
        reason_code:
          type: string
          description: "Chargeback reason code"
        card_number:
          type: string
          description: "Cardholder number"
        reply_form:
          type: string
          description: "Reply form type. Affects reply options."
        cycle_indicator:
          type: string
          description: "Chargeback cycle indicator"
        transaction_id:
          type: string
          description: "Transaction ID"
        reference_number:
          type: string
          description: "Transaction ID"
        case_status:
          type: string
          description: "Case status"
        case_status_description:
          type: string
          description: "Status description"
        mcc:
          type: string
          description: "MCC code"
        dispute_jurisdiction:
          type: string
          description: "Dispute jurisdiction"
        card_product_type:
          type: string
          description: "Card product"
        process_date:
          type: string
          format: date
          example: '01/21/2019'
          description: "Process date"
        transaction_method:
          type: string
          description: "Transaction method"
        invoice_number:
          type: string
          description: "Invoice number"
        microfilm_number:
          type: string
          description: "Microfilm number"
        airline_ticket_number:
          type: string
          description: "Airline ticket number"
        order_number:
          type: string
          description: "Order number"
        tracking_number:
          type: string
          description: "Tracking number"
        last_status_date:
          type: string
          format: date
          example: '01/21/2019'
          description: "Date of the last status update"
        updated_at:
          type: string
          format: date
          example: '01/21/2019'
          description: "Date of the most recent update"
        case_action:
          type: string
          description: "Case action"
        action:
          type: string
          description: "Can the case be viewed of replied"
        foreign_amount:
          type: string
          example: "10.00"
          description: "Foreign amount of transaction"
        transaction_locator:
          type: string
          description: Transaction locator
        authorization_code:
          type: string
          example: "08572B"
          description: "Authorization code"
        type:
          type: string
          example: "First Chargeback"
          description: "Chargeback type"
    CreateRetrievalsRequest:
      type: object
      description: Retrieval fields
      required:
        - retrievals
      properties:
        retrievals:
          type: array
          items:
            type: object
            required:
              - retrieval_date
              - transaction_date
              - amount
              - card_number
              - reference_number
            properties:
              retrieval_date:
                type: string
                format: date
                example: '2021-12-22'
                description: "Retrieval date"
              transaction_date:
                type: string
                format: date
                example: '2021-12-13'
                description: "Retrieval Transaction date"
              respond_due_date:
                type: string
                format: date
                example: '2021-12-30'
                description: "Retrieval Respond due date"
              amount:
                type: number
                example: 20.22
                description: "Retrieval Amount"
              original_amount:
                type: number
                example: 10.11
                description: "Retrieval Original Amount"
              reason_code:
                type: string
                description: "Retrieval reason code"
              reason:
                type: string
                description: "Retrieval reason description"
              case_status:
                type: string
                description: "Retrieval case status"
              case_type:
                type: string
                description: "Retrieval case type"
              case_number:
                type: string
                description: "Retrieval case number"
              item_type:
                type: string
                description: "Retrieval item type"
              family_id:
                type: string
                description: "Retrieval family id"
              reference_number:
                type: string
                example: "221779c4-e43a-4a93-aa21-55424e"
                description: "Retrieval Reference Number"
              card_number:
                $ref: "#/components/schemas/CardNumberObject"
    Retrieval:
      type: object
      properties:
        id:
          type: integer
          example: 123
          description: "Chargeback internal ID"
        merchant_id:
          type: string
          example: "48236605840"
          description: "Merchant ID"
        dba:
          type: string
          example: "Dummy Merchant DBA"
          description: "Merchant DBA"
        case_number:
          type: string
          example: "230880620"
          description: "Case number"
        retrieval_date:
          type: string
          format: date
          example: '01/21/2019'
          description: "Request date"
        transaction_date:
          type: string
          format: date
          example: '01/21/2019'
          description: "Transaction date"
        amount:
          type: string
          example: "10.00"
          description: "Amount"
        respond_due:
          type: string
          format: date
          example: '01/21/2019'
          description: "Respond due date"
        original_amount:
          type: string
          example: "10.00"
          description: "Original amount of transaction"
        currency:
          type: string
          description: "Transaction currency"
        reason:
          type: string
          description: "Retrieval case reason"
        reason_code:
          type: string
          description: "Retrieval case reason code"
        card_number:
          type: string
          description: "Cardholder number"
        transaction_id:
          type: string
          description: "Transaction ID"
        reference_number:
          type: string
          description: "Transaction ID"
        case_status:
          type: string
          description: "Case status"
        case_status_description:
          type: string
          description: "Status description"
        mcc:
          type: string
          description: "MCC code"
        dispute_jurisdiction:
          type: string
          description: "Dispute jurisdiction"
        card_product_type:
          type: string
          description: "Card product"
        transaction_method:
          type: string
          description: "Transaction method"
        invoice_number:
          type: string
          description: "Invoice number"
        microfilm_number:
          type: string
          description: "Microfilm number"
        airline_ticket_number:
          type: string
          description: "Airline ticket number"
        order_number:
          type: string
          description: "Order number"
        tracking_number:
          type: string
          description: "Tracking number"
        last_status_date:
          type: string
          format: date
          example: '01/21/2019'
          description: "Date of the last status update"
        updated_at:
          type: string
          format: date
          example: '01/21/2019'
          description: "Date of the most recent update"
        case_action:
          type: string
          description: "Case action"
        action:
          type: string
          description: "Can the case be viewed of replied"
        foreign_amount:
          type: string
          example: "10.00"
          description: "Foreign amount of transaction"
        transaction_locator:
          type: string
          description: Transaction locator
    ChargebackReplyDisputeRequest:
      type: object
      required:
        - selected_doc_types
        - user_note
        - file
      properties:
        selected_doc_types:
          type: string
          enum: [
              'sales_slip',
              'cancellation_policy',
              'order_form',
              'proof_of_delivery',
              'rental_agreement',
              'recurring_billing_agreement',
              'loyalty_transactions',
              'subsequent_purchases',
              'ticket_proof',
              'flight_manifest_proof',
              'cvv2_proof',
              'authorization_proof',
              'secure_code_proof',
              'other',
          ]
          description: Selected documents
        other_description:
          type: string
          description: Other document description
        compelling_doc:
          type: string
          description: Compelling document
          enum: [
              A,V,C
          ]
        selected_compelling:
          type: string
          description: Selected compelling
          enum: [
              'ch_in_possession'       ,
              'signed_delivery_form'   ,
              'address_verification'   ,
              'digital_goods_download' ,
              'delivery_to_ch'         ,
              'loyalty_transactions'   ,
              'subsequent_purchases'   ,
              'transport_proof'        ,
              'non_dispute_payments'   ,
              'auth_signer_by_ch'      ,
              'signed_order_form'      ,
              'legitimate_spend'       ,
              'recurring_transaction'  ,
              'member_of_ch_household' ,
              'flight_manifest'
          ]
        selected_digital_goods_04:
          type: string
          description: Digital goods compelling documents
          enum: [
            'purchaser_ip_and_location',
            'device_id_and_name',
            'purchaser_name_and_email',
            'same_device_and_card',
            'proof_of_profile_setup',
            'proof_of_app_access'
          ]
        download_date:
          type: string
          description: Download date
        download_time:
          type: string
          description: Download time
        purchaser_ip_addr:
          type: string
          description: Purchaser IP address
        geographical_location:
          type: string
          description: Physical location
        device_id:
          type: string
          description: PhDevice ID
        device_name:
          type: string
          description: Device ID
        purchaser_name:
          type: string
          description: Purchaser name
        purchaser_email:
          type: string
          description: Purchaser email
        arn_04:
          type: string
          description: ARN
        tran_date_04:
          type: string
          description: Transaction date
        arn_09:
          type: string
          description: ARN
        tran_date_09:
          type: string
          description: Transaction date
        arn_13:
          type: string
          description: ARN
        tran_date_13:
          type: string
          description: Transaction date
        ip_address:
          type: string
          description: IP address
        email_address:
          type: string
          description: Email address
        phone_number:
          type: string
          description: Phone number
        physical_address:
          type: string
          description: Physical address
        user_note:
          type: string
          description: User note
        file:
          type: array
          description: Files to attach
          items:
            type: string
    ChargebackReplyCreditIssuedRequest:
      type: object
      required:
        - credit_date
        - credit_amount
        - user_note
        - file
      properties:
        credit_date:
          type: string
          description: Credit transaction date
        credit_amount:
          type: string
          description: Credit transaction amount
        user_note:
          type: string
          description: User note
        file:
          type: array
          description: Files to attach
          items:
            type: string
    RetrievalReplyResponseRequest:
      type: object
      required:
        - user_note
        - file
      properties:
        user_note:
          type: string
          description: User note
        file:
          type: array
          description: Files to attach
          items:
            type: string
    RetrievalReplyUnableRequest:
      type: object
      required:
        - user_note
        - file
      properties:
        user_note:
          type: string
          description: User note
        file:
          type: array
          description: Files to attach
          items:
            type: string
    RetrievalReplyCreditIssuedRequest:
      type: object
      required:
        - credit_date
        - credit_amount
        - user_note
        - file
      properties:
        credit_date:
          type: string
          description: Credit transaction date
        credit_amount:
          type: string
          description: Credit transaction amount
        user_note:
          type: string
          description: User note
        file:
          type: array
          description: Files to attach
          items:
            type: string
    ChargebackReplyResponse:
      allOf:
        - type: object
          properties:
            chargeback:
              type: object
              properties:
                id:
                  type: string
                  example: 1
                merchant_id:
                  type: string
                  example: "123456789"
                dba:
                  type: string
                  example: "Wild Coyote Hotel"
                cycle_indicator:
                  type: string
                  example: 'First chargeback'
                date:
                  type: string
                  example: "11/14/2020"
                transaction_date:
                  type: string
                  example: "11/14/2020"
                amount:
                  type: string
                  example: "1000.00"
                reason_code:
                  type: string
                reason:
                  type: string
                card_number:
                  type: string
                case_number:
                  type: string
                case_action:
                  type: string
                action:
                  type: string
                reply_form:
                  type: string
                case_status:
                  type: string
                case_status_description:
                  type: string
                last_status_date:
                  type: string
                respond_due:
                  type: string
                original_amount:
                  type: string
                updated_at:
                  type: string
                mcc:
                  type: string
                dispute_jurisdiction:
                  type: string
                card_product_type:
                  type: string
                process_date:
                  type: string
                transaction_method:
                  type: string
                invoice_number:
                  type: string
                microfilm_number:
                  type: string
                airline_ticket_number:
                  type: string
                order_number:
                  type: string
                tracking_number:
                  type: string
            items:
              type: object
              properties:
                reason:
                  type: string
                message_from_bank:
                  type: string
                merchant_due_date:
                  type: string
                financial_disposition_date:
                  type: string
                type:
                  type: string
        - $ref: "#/components/schemas/DisputeDetailsResponse"
    RetrievalsReplyResponse:
      allOf:
        - type: object
          properties:
            retrieval:
              type: object
              properties:
                id:
                  type: string
                merchant_id:
                  type: string
                  example: "123456789"
                dba:
                  type: string
                  example: "Wild Coyote Hotel"
                date:
                  type: string
                transaction_date:
                  type: string
                amount:
                  type: string
                reason_code:
                  type: string
                reason:
                  type: string
                card_number:
                  type: string
                case_number:
                  type: string
                case_action:
                  type: string
                action:
                  type: string
                case_status:
                  type: string
                case_status_description:
                  type: string
                last_status_date:
                  type: string
                respond_due:
                  type: string
                original_amount:
                  type: string
                updated_at:
                  type: string
                mcc:
                  type: string
                dispute_jurisdiction:
                  type: string
                card_product_type:
                  type: string
                foreign_amount:
                  type: string
                transaction_method:
                  type: string
                transaction_locator:
                  type: string
                invoice_number:
                  type: string
                microfilm_number:
                  type: string
                airline_ticket_number:
                  type: string
                order_number:
                  type: string
                tracking_number:
                  type: string
        - $ref: "#/components/schemas/DisputeDetailsResponse"
    DisputeDetailsResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            type: object
            properties:
              reference:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                    value:
                      type: string
        auth_records:
          type: array
          items:
            type: object
            properties:
              reference:
                type: string
              fields:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                    value:
                      type: string
        notes:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
              added_at:
                type: string
        messages:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
              description:
                type: string
              added_at:
                type: string
              viewed_on:
                type: string
        directories:
          type: array
          items:
            type: object
            properties:
              time:
                type: string
              title:
                type: string
              files:
                type: array
                items:
                  type: object
                  properties:
                    time:
                      type: string
                    title:
                      type: string
                    url:
                      type: string
                      description: site url
                      example: "https://dev.iriscrm.com/retrievals/download-file/94900"
                    api_url:
                      type: string
                      description: api url
                      example: "https://dev.iriscrm.com/api/v1/merchants/333333333/retrievals/903729142148/files/94900"
    DisputeFile:
      type: object
      properties:
        name:
          type: string
          description: File name
          example: "Merchant Output Package_4/4/20.tif"
        directory:
          type: string
          description: Folder name
          example: Incoming Chargeback Documents
        content:
          type: string
          format: binary
          description: base64 encoded content
    CreateMemosRequest:
      type: object
      description: Memo fields
      required:
        - memos
      properties:
        memos:
          type: array
          items:
            type: object
            required:
              - text
            properties:
              text:
                type: string
                example: "Memo text"
                description: "Memo text"
              is_visible:
                type: string
                enum: ["Yes", "No"]
                description: "Is memo visible to merchant"
    UpdateDetailsRequest:
      type: object
      description: Details fields
      required:
        - details
      properties:
        details:
          type: object
          example:
            "DBA City": "New York"
            "Table Field":
              "0":
                "Column1": "Value1"
                "Column2": "Value2"
                "Column3": "Value3"
              "1":
                "Column1": "Value4"
                "Column2": "Value5"
                "Column3": "Value6"
          properties:
            "{account_field_key_string}":
              type: string
              description: "Value for given account status field key"
            "{account_field_key_table}":
              type: array
              description: "Rows for table"
              items:
                type: object
                properties:
                  "{table_header_title}":
                    type: string
                    description: "Value for given table title (column/cell)"
        status_map:
          type: object
          description: "Define custom map of string representation for 'Status' field to map to Open/Closed merchant status"
          properties:
            "1":
              type: array
              example: ["Approved", "Active"]
              description: "String representations of open status"
              items:
                type: string
                description: "String value representation of open status"
            "2":
              type: array
              example: ["Canceled", "Inactive"]
              description: "String representations of closed status"
              items:
                type: string
                description: "String value representation of closed status"
    EquipmentResponse:
      allOf:
        - type: object
          properties:
            data:
              type: array
              description: "Equipment list"
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: ID
                  vnumber:
                    type: string
                    description: V Number
                  date:
                    type: string
                    description: File Update Date
                  bin:
                    type: string
                    description: BIN
                  mcc:
                    type: string
                    description: MCC
                  agent:
                    type: string
                    description: Agent
                  chain:
                    type: string
                    description: Chain
                  store:
                    type: string
                    description: Store Number
                  terminal:
                    type: string
                    description: Terminal Number
                  hc_pos_id:
                    type: string
                    description: POS Identifier
                  auth_code:
                    type: string
                    description: Authentication Code
                  pos_mid:
                    type: string
                    description: POS Merchant ID
                  name:
                    type: string
                    description: Merchant Name
                  address:
                    type: string
                    description: Merchant Address
                  city:
                    type: string
                    description: City
                  state:
                    type: string
                    description: State
                  zip_code:
                    type: string
                    description: ZIP Code
                  country:
                    type: string
                    description: Country
                  phone:
                    type: string
                    description: Phone
                  contact:
                    type: string
                    description: Contact Name
                  timezone:
                    type: string
                    description: Timezone
                  manufacturer:
                    type: string
                    description: Manufacturer
                  model:
                    type: string
                    description: Model
                  software:
                    type: string
                    description: Software
                  comments_txt:
                    type: string
                    description: Profile Comments
                  close_profile:
                    type: string
                    description: Close Profile
                  close_profile_date:
                    type: string
                    description: Close Profile Date
                  location_num:
                    type: string
                    description: Location Number
                  entitlements:
                    type: string
                    description: Entitlements
                  ebt_fcs_id:
                    type: string
                    description: EBT FCS ID
                  ebt_trans_type:
                    type: string
                    description: EBT Trans Type
                  comments1:
                    type: string
                    description: Support Comments 1
                  comments2:
                    type: string
                    description: Support Comments 2
                  comments3:
                    type: string
                    description: Support Comments 3
                  pin_pad_available:
                    type: string
                    description: Is PIN Pad available
                    enum: ["Yes", "No"]
                  pin_pad_type:
                    type: string
                    description: PIN Pad Type
                  pin_pad_idle_prompt:
                    type: string
                    description: PIN Pad Idle Prompt
                  corp_hq_name:
                    type: string
                    description: Corporate HQ Name
                  alt_build_type:
                    type: string
                    description: Alt Build Type
                  alt_build_type_desc:
                    type: string
                    description: Alt Build Type Description
                  auth_comm_type:
                    type: string
                    description: Auth Comm Type
                  settle_comm_type:
                    type: string
                    description: Settle Comm Type
                  tip_option:
                    type: string
                    description: Tip Option
                  tip_at_time_of_sale:
                    type: string
                    description: Tip At Time Of Sale
                  clerk_server:
                    type: string
                    description: Clerk/Server Option
                  auto_close:
                    type: string
                    description: Auto Close
                  auto_close_time1:
                    type: string
                    description: Auto Close Time 1
                  auto_close_reports:
                    type: string
                    description: Auto Close Reports
                  merchant_aba_number:
                    type: string
                    description: Merchant ABA
                  merchant_settlement_agent:
                    type: string
                    description: Settlement Agent
                  reimbursement_attribute:
                    type: string
                    description: Reimbursement Attribute
                  status:
                    type: string
                    description: Status
    SummaryResponse:
      type: object
      properties:
        processor_id:
          type: integer
          example: 1
        name:
          type: string
          example: Test Processor
        created:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
        created_by:
          type: integer
          example: 1
        modified:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
        modified_by:
          type: integer
          example: 1
        merchants_count:
          type: integer
          example: 11
        sum_transactions:
          type: integer
          example: 1664667
        sum_sales_amount:
          type: number
          example: 0
        sum_income:
          type: number
          example: 0
        sum_expense:
          type: number
          example: 0
        sum_net:
          type: number
          example: 0
        sum_bps:
          type: number
          example: 0
        sum_agent_net:
          type: integer
          example: 0
    MerchantRow:
      type: object
      properties:
        merchant:
          type: string
          example: Merchant name
        transactions:
          type: integer
          example: 151182
        sales_amount:
          type: integer
          example: 15637576
        income:
          type: integer
          example: 499400
        expense:
          type: integer
          example: 454000
        net:
          type: integer
          example: 45400
        bps:
          type: integer
          example: 0.29
        users:
          type: boolean
          example: true
        percentage:
          type: integer
          example: 0
        agent_net:
          type: integer
          example: 0
        mid:
          type: integer
          example: 12312312312
    ResidualsDetails:
      type: object
      properties:
        MID:
          type: string
          example: "12312312312"
        DBA:
          type: string
          example: "Test Merchant"
#      "patternProperties":
#        "*":
#          "type": "string"
      "additionalProperties":
        "type": "string"
    LineItems:
      type: object
      properties:
        id:
          type: integer
          example: 1
        type:
          type: string
          enum: [
            agent,
            merchant
          ]
          example: "agent"
        item_id:
          type: integer
          example: 10100101
        user:
          type: object
          properties:
            user_id:
              type: integer
              example: 1
            username:
              type: string
              example: john79
            full_name:
              type: string
              example: John Doe
            class:
              type: string
              example: Sales Manager
            is_active:
              type: integer
              example: 1
        merchant:
          type: object
          properties:
            mid:
              type: string
              example: 1231323
            dba:
              type: string
              example: Test Company
        related_mid:
          type: integer
          example: 10100101
        related_dba:
          type: string
          example: 'Merchant DBA'
        description:
          type: string
        income:
          type: integer
          example: 499400
        expense:
          type: integer
          example: 454000
        percentage:
          type: integer
          example: 0
        agent_net:
          type: integer
          example: 45400
        is_recurring:
          type: boolean
          example: true
        created:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
          description: "Created date of line item"
        modified:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
          description: "Last update date of line item"
        agents:
          type: array
          items:
            type: object
            properties:
              user_id:
                type: integer
                example: 1
              username:
                type: string
                example: john79
              full_name:
                type: string
                example: John Doe
              agent_net:
                type: integer
                example: 45400
              percentage:
                type: integer
                example: 0
        recurring_start_date:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
          description: "Date of start recurring line item"
        recurring_payment_count:
          type: integer
          example: 100
          description: "Count of payments what was already done"
        recurring_max_payment_count:
          type: integer
          example: 100
          description: "Count of payments which will be done (this will be null if there is no limit)"
        recurring_period:
          type: string
          enum:
          - weekly
          - monthly
          - quarterly
          - yearly
          example: weekly
    ResidualTemplate:
      type: object
      properties:
        id:
          type: integer
          example: 21
        name:
          type: string
          example: Test template
        creator_id:
          type: integer
          example: 1
        creator_name:
          type: string
          example: Jane Doe
        created_at:
          type: string
          format: date-time
          example: '2020-01-01T12:04:40+05:00'
          description: "Created date of template"
        revision:
          type: integer
          example: 2
        rules:
          type: array
          items:
            $ref: "#/components/schemas/TemplateRules"
    ResidualTemplateAssigned:
      type: object
      properties:
        user_id:
          type: integer
          example: 1
        username:
          type: string
          example: janedoe
        full_name:
          type: string
          example: Jane Doe
        templates:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: test template
              version:
                type: integer
                example: 2
              processor_id:
                type: integer
                example: 12
              rules:
                type: array
                items:
                  $ref: "#/components/schemas/TemplateRules"
    TemplateRules:
      type: object
      properties:
        column:
          type: string
          example: Agent Net
        rule:
          type: string
          example: decrease
        value:
          type: integer
          example: 100
        field:
          type: string
          example: "Income 3"
    BriefLeadInfo:
      type: object
      properties:
        id:
          type: integer
          description: "Lead Id"


        mid:
          type: integer
          description: "Lead merchant Id"

        name:
          type: string
          description: "Lead name"
        group:
          $ref: "#/components/schemas/BriefGroupInfo"
        category:
          $ref: "#/components/schemas/BriefCategoryInfo"
        status:
          $ref: "#/components/schemas/BriefStatusInfo"
        campaign:
          $ref: "#/components/schemas/BriefCampaignInfo"
        source:
          $ref: "#/components/schemas/BriefSourceInfo"
        created:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
          description: 'Lead creation date (Y-m-d\TH:i:sP)'
        modified:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
          description: 'Lead modification date (Y-m-d\TH:i:sP)'
    BriefApplicationInfo:
      type: object
      properties:
        id:
          type: integer
          description: "Application Id"
        name:
          type: string
          description: "Application name"
        e-sign:
          type: string
          description: "Is E-Sign available?"
    BriefCampaignInfo:
      type: object
      properties:
        id:
          type: integer
          description: "Campaign Id"
        name:
          type: string
          description: "Campaign name"
    BriefSourceInfo:
      type: object
      properties:
        id:
          type: integer
          description: "Source Id"
        name:
          type: string
          description: "Source name"
    BriefGroupInfo:
      type: object
      properties:
        id:
          type: integer
          description: "Group Id"
        name:
          type: string
          description: "Group name"
    BriefCategoryInfo:
      type: object
      properties:
        id:
          type: integer
          description: "Status category Id"
        name:
          type: string
          description: "Status category name"
    BriefStatusInfo:
      type: object
      properties:
        id:
          type: integer
          description: "Status Id"
        name:
          type: string
          description: "Status name"
    CategoryWithStatuses:
      type: object
      properties:
        id:
          type: integer
          description: "Status category Id"
        name:
          type: string
          description: "Status category name"
        statuses:
          type: array
          items:
            $ref: "#/components/schemas/BriefStatusInfo"
    BriefTabInfo:
      type: object
      properties:
        id:
          type: integer
          description: "Tab Id"
        name:
          type: string
          description: "Tab name"
    BriefUserInfo:
      type: object
      properties:
        id:
          type: integer
          description: "User Id"
          example: 123
        name:
          type: string
          description: "User name"
          example: "John Doe"
    BriefUserInfoWithClass:
      type: object
      properties:
        id:
          type: integer
          description: "User Id"
          example: 1
        username:
          type: string
          description: "User username"
          example: "manager1"
        full_name:
          type: string
          description: "User name"
          example: "John Doe"
        email:
          type: string
          description: "User email"
          example: example@www.mycoastalpay.com
        status:
          type: string
          description: "User status"
          example: "active"
        class:
          type: string
          description: "User class"
          example: "Manager"
    LeadFieldValue:
      type: object
      properties:
        uid:
          type: integer
          description: Field unique Id
          example: 4567
        id:
          type: string
          description: Field Id
        field:
          type: string
          description: Field name
        value:
          type: string
          description: Field value
    LeadField:
      type: object
      required:
        - tab
        - label
        - type
        - value
      properties:
        id:
          type: integer
          description: "Field Id"
          example: 1
          readOnly: true
        tab:
          type: integer
          description: "Field tab Id"
          example: 1
        label:
          type: string
          description: "Field label"
          example: "New Field"
        type:
          type: string
          description: "Field type"
          example: "Select"
          enum: [
            'DateCreate',
            'GoogleMaps',
            'jQDate',
            'Number',
            'Txt',
            'TxtArea',
            'TxtDollar',
            'TxtBalance',
            'TxtSIC',
            'TxtPercent',
            'TxtRouting',
            'TxtSecure',
            'TxtMasked',
            'Checkbox',
            'Select',
            'SelectRed',
            'Label',
            'Packages',
            'PhoneMask',
            'PrFormats',
            'QuickEmail',
            'QuickFax',
            'TimeZone'
          ]
        length:
          type: integer
          description: "Field size"
          example: 10
        default:
          type: string
          description: "Field default value"
          example: "Some Value"
        alignment:
          type: string
          description: "Field alignment"
          enum: [
            "",
            'left',
            'middle',
            'right',
            'left_column',
            'right_column',
            'float_left_whole_row',
            'float_left',
            'float_middle'
          ]
          example: "left"
        searchable:
          type: integer
          description: "Searchable field"
          enum: [
            0,
            1
          ]
          example: 1
        special:
          type: string
          description: "Field special value"
          example: "dba"
          enum: [
            "",
                        "mid",
                        "dba",
            "sales_number",
            "busaddress",
            "buscity",
            "busstate",
            "buszipcode",
            "bustype",
            "busproducts",
            "busmarkettype",
            "busstartdate",
            "sic",
            "taxid",
            "processor",
            "owner_fname",
            "owner_lname",
            "owner_title",
            "owner_ssn",
            "phone",
            "cellphone",
            "email",
            "contact",
            "contact_1",
            "contact_2",
            "avgtckt",
            "volume",
            "bank_name_on_account",
            "bank_account_type",
            "bank_account_owner_type",
            "aba_code",
            "account_number",
            "bank_name",
            "bank_city",
            "bank_state",
            "bank_zip",
            "LMS_FScore",
            "LMS_RefNum",
            "LR_MONTHLY_PAYMENT",
            "LR_EQUIPMENT",
            "LR_WIRE_TRANFER",
            "LR_PACK_FEE",
            "LR_CANCELLATION",
            "leadID"
          ]
        options:
          type: object
          properties:
            dropdown:
              type: object
              description: Add new list item
              properties:
                key:
                  type: string
                  example: 'key'
                value:
                  type: string
                  example: 'Option Value'
            dupecheck:
              type: boolean
              description: Enable dupecheck
              example: true
            contactid:
              type: string
              description: Id of contact field
              example: 1
            mask:
              type: string
              description: Field mask
              enum: [
                'validateSSN',
                'validateDate',
                'validateDate2',
                'validateZip5',
                'validateZip9'
              ]
            copy:
              type: object
              description: Copy button properties
              properties:
                title:
                  type: string
                  description: Button label
                  example:
                from:
                  type: object
                  description: Copy from
                  example:
                    "1": 1
                    "2": 2
                to:
                  type: object
                  description: Copy to
                  example:
                    "1": 1
                    "2": 2
            hyperlink:
              type: boolean
              description: Enable hyperlink
              example: true
            sms:
              type: boolean
              description: Enable SMS
              example: true
            dialer:
              type: boolean
              description: Enable dialer
              example: true
            googlemaps:
              type: object
              description: Google Maps search properties
              example:
                "1": 1
                "2": 2
            zip_code_field:
              type: integer
              description: Zip code field ID for TimeZone field only
              example: 1
            zipcode_autocomplete:
              type: object
              description: ZIP Code autofill properties
              properties:
                city:
                  type: object
                  description: City fields
                  example:
                    "1": 1
                    "2": 2
                state:
                  type: object
                  description: State fields
                  example:
                    "1": 1
                    "2": 2
                zipcode:
                  type: object
                  description: Zipcode fields
                  example:
                    "1": 1
                    "2": 2
        order:
          type: integer
          example: 1
          readOnly: true
        readOnly:
          type: boolean
          description: Whether the field is read only
          example: false
          readOnly: true
        required:
          type: boolean
          description: Whether the field is required
          example: true
          readOnly: true
    LeadFieldOrder:
      type: object
      required:
        - value
      properties:
        value:
          type: integer
          description: "New order position of lead field"
          example: 1
        type:
          type: string
          enum: [
            "increment",
            "decrement"
          ]
          description: "Type of changing order position"
          example: "increment"
          default: null
    LeadFieldTab:
      type: object
      required:
      - position
      - class
      - name
      - order
      properties:
        id:
          type: integer
          description: "Tab Id"
          example: 1
          readOnly: true
        active:
          type: integer
          description: "Active tab"
          enum: [
            0,
            1
          ]
          example: 1
        position:
          type: integer
          description: "Tab position"
          example: 1
          enum: [1 = left, 2 = bottom right, 3 = middle right, 4 = top right]
        class:
          type: string
          description: "Tab class"
          example: "documents"
          enum: [''' - empty string for TAB', 'set', 'documents', 'altdocs', 'notes']
        name:
          type: string
          description: "Tab class"
          example: "New tab"
        order:
          type: integer
          description: "Tab order"
          example: 1
    ApplicationField:
      type: object
      required:
      - from
      properties:
        id:
          type: integer
          description: "Application field Id"
          example: 1
          readOnly: true
        from:
          type: integer
          description: "Application field from field Id"
          example: 1
        record:
          type: integer
          description: "Application field record"
          example: 1
        to:
          type: string
          description: "Name of mapped field"
          example: "Test"
        toAlt:
          type: string
          description: "Alt of mapped field"
          example: "Alt test"
        toType:
          type: string
          description: "Type of mapped field"
          example: "Text"
        special:
          type: string
          description: "Special type of mapped field"
          example: "chk"
          default: null
          enum: [
            null,
            'chk',
            'd2t',
            'salesrep',
            'salesrep_position',
            'salesrep_email',
            'salesrep_phone',
            'salesrep_mobile',
            'salesrep_fax',
            'salesrep_ext',
            'leading_comma',
            'date_mdY',
            'date_mdy',
          ]
        info:
          readOnly: true
          type: array
          items:
            type: object
            properties:
              field_name:
                type: string
                description: "Field name"
                example: "Business Address"
              field_type:
                type: string
                description: "Field type"
                enum: [
                  Text,
                  Checkbox
                ]
                example: Text
              left:
                type: integer
                description: "Padding from left"
                example: 19.962399999999999
              right:
                type: integer
                description: "Padding from right"
                example: 303.43799999999999
              top:
                type: integer
                description: "Padding from top"
                example: 686.60500000000002
              bottom:
                type: integer
                description: "Padding from bottom"
                example: 673.24699999999996
              field_height:
                type: integer
                description: "Height of field"
                example: 13.35797
              field_width:
                type: integer
                description: "Width of field"
                example: 283.47559999999999
              page_number:
                type: integer
                description: "Page number"
                example: 1
              page_height:
                type: integer
                description: "Page height"
                example: 792
              page_width:
                type: integer
                description: "Page width"
                example: 612
              page_rotation:
                type: integer
                description: "Page rotation"
                example: 0
              export_value:
                type: string
                description: "Export value"
                example: Yes
              tooltip:
                type: string
                description: "Field tooltip"
                example: Test
              duplicates:
                type: array
                items:
                  type: object
                  properties:
                    instance:
                      type: integer
                      description: "Activity Id"
                      example: 2
                    left:
                      type: integer
                      description: "Padding from left"
                      example: 542.962399999999999
                    right:
                      type: integer
                      description: "Padding from right"
                      example: 596.43799999999999
                    top:
                      type: integer
                      description: "Padding from top"
                      example: 107.60500000000002
                    bottom:
                      type: integer
                      description: "Padding from bottom"
                      example: 95.24699999999996
                    height:
                      type: integer
                      description: "Height of field"
                      example: 11.35797
                    width:
                      type: integer
                      description: "Width of field"
                      example: 53.47559999999999
                    page_number:
                      type: integer
                      description: "Page number"
                      example: 4
    StatusActivity:
      type: object
      properties:
        id:
          type: integer
          description: "Activity Id"
          example: 1
        changedBy:
          type: integer
          description: "User Id"
          example: 1
        changedAt:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
          description: 'Deleted date (Y-m-d\TH:i:sP)'
        oldStatus:
          type: string
          example: 'Old'
          description: 'Old status'
        old_status_id:
          type: integer
          description: "Old Status Id"
          example: 1
        newStatus:
          type: string
          example: 'New'
          description: 'New status'
        new_status_id:
          type: integer
          description: "New Status Id"
          example: 2
    CampaignActivity:
      type: object
      properties:
        id:
          type: integer
          description: "Activity Id"
          example: 1
        newValue:
          type: string
          description: "New value of activity"
          example: "Test"
        assignedBy:
          type: integer
          description: "User Id"
          example: 1
        assignedAt:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
          description: 'Assigned date (Y-m-d\TH:i:sP)'
    SourceActivity:
      type: object
      properties:
        id:
          type: integer
          description: "Activity Id"
          example: 1
        newValue:
          type: string
          description: "New value of activity"
          example: "Test"
        assignedBy:
          type: integer
          description: "User Id"
          example: 1
        assignedAt:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
          description: 'Assigned date (Y-m-d\TH:i:sP)'
    LinksActivity:
      type: object
      properties:
        id:
          type: integer
          description: "Activity Id"
          example: 1
        status:
          type: string
          enum: [
            'Linked',
            'Unlinked'
          ]
          description: "Status of link"
          example: "Linked"
        lead:
          type: string
          description: "Lead Id"
          example: "123"


        merchant:
          type: string
          description: "Merchant Id"
          example: "123"

        linkedBy:
          type: integer
          description: "User Id"
          example: 1
        linkedAt:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
          description: 'Linking date (Y-m-d\TH:i:sP)'
    DeletionActivity:
      type: object
      properties:
        id:
          type: integer
          description: "Activity Id"
          example: 1
        deletedId:
          type: integer
          description: "User Id"
          example: 1
        deletedAt:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
          description: 'Date of deletion (Y-m-d\TH:i:sP)'
        undeletedId:
          type: integer
          description: "User Id"
          example: 1
        undeletedAt:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
          description: 'Date of undeletion (Y-m-d\TH:i:sP)'
    DuplicateActivity:
      type: object
      properties:
        id:
          type: integer
          description: "Activity Id"
          example: 1
        oldLeadId:
          type: integer
          description: "Old lead Id"
          example: 1
        newLeadId:
          type: integer
          description: "New lead Id"
          example: 1
        duplicatedBy:
          type: integer
          description: "User Id"
          example: "1"
        duplicatedAt:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
          description: 'Date of duplication (Y-m-d\TH:i:sP)'
    BriefEmailTemplate:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Email template title"
    BriefSmsTemplate:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "SMS template title"

    FileLabel:
      type: object
      properties:
        id:
          type: integer
          description: Label Id
          example: 1
        order:
          type: integer
          description: Label display order
          example: 1
        name:
          type: string
          description: "Label name"
          example: Default


    Ticket:
      type: object
      properties:
        id:
          type: integer
          description: "Ticket id"
          readOnly: true
          example: 1
        subject:
            type: string
            description: "Ticket subject"
            example: "Ticket subject"
        description:
          type: string
          description: "Ticket description"
          example: "Ticket description"
        status:
          type: object
          properties:
            id:
              type: integer
              description: "Status id"
              example: 1
            name:
              type: string
              description: "Status name"
              example: "New"
        type:
          type: object
          properties:
            id:
              type: integer
              description: "Type id"
              example: 1
            name:
              type: string
              description: "Ticket type"
              example: "Test ticket type"
        group:
          type: object
          properties:
            id:
              type: integer
              description: "Group id"
              example: 1
            name:
              type: string
              description: "Group name"
              example: "Test group"
        priority:
          type: object
          properties:
            id:
              type: integer
              description: "Priority id"
              example: 1
            name:
              type: string
              description: "Priority name"
              example: "Medium"
        lead_id:
          type: integer
          description: "Assigned Lead ID"
          example: 3421

        mid:
          type: integer
          description: "Assigned Merchant ID"
          example: 10204324
        merchantVisible:
          type: boolean
          description: "Indicates if the ticket is visible to Merchant users"
          example: true


    TicketCreatedBlock:
      type: object
      properties:
        created:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
          description: "Ticket created date"
        created_by:
          type: integer
          description: "Ticket creator id"
          example: 1

    BriefTicketInfo:
      allOf:
        - $ref: "#/components/schemas/Ticket"
        - $ref: "#/components/schemas/TicketCreatedBlock"
        - type: object
          properties:
            modified:
              type: string
              format: date-time
              example: '2019-01-01T12:04:40+05:00'
              description: "Ticket modified date"
            modified_by:
              type: integer
              description: "Id of user who made last change"
              example: 1
            resolved:
              type: string
              format: date-time
              example: '2019-01-01T12:04:40+05:00'
              description: "Ticket resolved date"
            resolved_by:
              type: integer
              description: "Id of user who made last change"
              example: 1
            due_date:
              type: string
              format: date
              example: '2019-01-01T12:04:40+05:00'
              description: "Ticket due date"
            due:
              type: string
              example: '7 days'
              description: "Ticket SLA"
            only_business_days:
              type: boolean
              example: true
              description: "Calculate only business days"
            last_comment:
              type: string
              format: date-time
              example: '2019-01-01T12:04:40+05:00'
              description: "Ticket last comment date"
            files_count:
              type: integer
              description: "Count of ticket files"
              example: 12
    BriefTicketTypeInfo:
      type: object
      properties:
        id:
          type: integer
          description: "Ticket type id"
          example: 1
        name:
          type: string
          description: "Ticket type name"
          example: "Ticket type name"
        description:
          type: string
          description: "Ticket type description"
          example: "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
        daysToResolve:
          type: integer
          description: "Days to Resolve"
          example: 10
        only_business_days:
          type: boolean
          description: "Calculate only business days"
          example: true
        status:
          type: object
          properties:
            id:
              type: integer
              description: "Status id"
              example: 1
            name:
              type: string
              description: "Status name"
              example: "New"
        priority:
          type: object
          properties:
            id:
              type: integer
              description: "Priority id"
              example: 1
            name:
              type: string
              description: "Priority name"
              example: "Medium"
        created:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
          description: "Ticket type created date"
        createdBy:
          type: integer
          description: "Ticket type creator id"
          example: 1
        modified:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
          description: "Ticket type modified date"
        modifiedBy:
          type: integer
          description: "Id of user who made last change"
          example: 1
        order:
          type: integer
          description: "Ticket type order"
          example: 1111
        permissions:
          type: array
          items:
            type: integer
            example: 1
        due_date:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
          description: "Ticket due date"
        assignees:
          type: object
          properties:
            everyTime:
              type: array
              items:
                type: integer
                example: 2
            roundRobin:
              type: array
              items:
                type: integer
                example: 3
    TicketTypeRequest:
      type: object
      properties:
        name:
          type: string
          description: "Ticket type name"
          example: "Ticket type name"
        description:
          type: string
          description: "Ticket type description"
          example: "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
        daysToResolve:
          type: integer
          description: "Days to Resolve"
          example: 10
        only_business_days:
          type: boolean
          description: "Calculate only business days"
          example: true
        status:
          type: string
          description: "Status"
          enum: [active, inactive]
          example: active
        priority:
          type: integer
          description: "Priority (0 - Normal, 1 - Medium, 2 - Rush)"
          enum: [0, 1, 2]
          example: 1
        permissions:
          type: array
          items:
            type: integer
            example: 1
        assignees:
          type: object
          properties:
            everyTime:
              type: array
              items:
                type: integer
                example: 2
            roundRobin:
              type: array
              items:
                type: integer
                example: 3
    BriefTicketComments:
      type: object
      properties:
        id:
          type: integer
          description: "Comment id"
          example: 1
        ticketId:
          type: integer
          description: "Ticket id"
          example: 2
        comment:
          type: string
          description: "Comment text"
          example: 'Comment text'
        created:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
          description: "Comment created date"
        createdBy:
          type: integer
          description: "Comment creator id"
          example: 1
        modified:
          type: string
          format: date-time
          example: '2019-01-01T12:04:40+05:00'
          description: "Comment modified date"
        modifiedBy:
          type: integer
          description: "Id of user who left comment"
          example: 1
        files:
          type: array
          items:
            $ref: "#/components/schemas/File"
        preview_images:
          type: array
          items:
            $ref: "#/components/schemas/File"

        merchantVisible:
          type: boolean
          description: "Indicates if the comment is visible to Merchant users"
          example: true


    BriefTicketUsersInfo:
      type: object
      properties:
        id:
          type: integer
          description: "User id"
          example: 1
        name:
          type: string
          description: "User name"
          example: 1
        class:
          type: string
          description: "User class"
          example: 'Support'
    BriefTicketChecklistInfo:
      type: object
      properties:
        id:
          type: integer
          description: "Checklist item Id"
          readOnly: true
          example: 1
        template_id:
          type: integer
          description: "Checklist template Id"
          readOnly: true
          example: 12
        name:
          type: string
          description: "Checklist item name"
          example: Test
        index:
          type: integer
          description: "Index in list"
          example: 0
        required:
          type: boolean
          description: "Flag is checklist are required"
          example: true
        fileRequired:
          type: boolean
          description: "Flag is checklist file are required"
          example: true
        commentRequiredToDoneTicket:
          type: boolean
          description: "Flag is comment are required to resolve ticket"
          example: true
        commentRequiredToDoneItem:
          type: boolean
          description: "Flag is checklist are required to resolve checklist item"
          example: true
        commentedAt:
          format: date-time
          readOnly: true
          example: '2019-01-01T12:04:40+05:00'
          description: "Datetime when user have commented checklist item"
        commentedBy:
          type: integer
          readOnly: true
          description: "User Id of user who have commented checklist item"
          example: 123
    ChecklistFullInfo:
      allOf:
        - $ref: "#/components/schemas/BriefTicketChecklistInfo"
        - type: object
          properties:
            completed:
              type: boolean
              description: "Flag is checklist are done"
              example: true
            completed_by:
              type: integer
              readOnly: true
              description: "User ID who compleated the checklist"
              example: 123
            completed_at:
              format: date-time
              readOnly: true
              example: '2019-01-01T12:04:40+05:00'
              description: "Datetime when user have completed the checklist item"
            files:
              type: array
              items:
                $ref: "#/components/schemas/File"
    CheckListRequest:
      type: object
      properties:
        index:
          type: integer
          description: "Checklist item index"
          example: 1
        files:
          type: array
          items:
            type: string
            example: "15dfd5e51a10145.87303877_ticket_checklist_file.pdf"
        attached_files:
          type: array
          items:
            type: integer
            description: "IDs of existing files"
            example: 123
        completed:
          type: boolean
          description: "Flag checklist are item completed"
          example: true
        comment:
          type: string
          description: "Comment for checklist item"
          example: 'Test comment'

    TicketSubscriptionData:
      type: object
      properties:
        ticket_url:
          type: string
          example: "https://www.mycoastalpay.com/helpdesk/ticket/1"
        assignedUsers:
          $ref: "#/components/schemas/UserListStructure"
        files:
          type: array
          items:
            $ref: "#/components/schemas/File"
        preview_images:
          type: array
          items:
            $ref: "#/components/schemas/File"
        due_date:
          type: string
          format: date
          example: '2019-01-01T12:04:40+05:00'
          description: "Ticket due date"
        due:
          type: string
          example: '7 days'
          description: "Ticket SLA"
        only_business_days:
          type: boolean
          example: true
          description: "Calculate only business days"

    TicketDetail:
      type: object
      properties:
        general:
          allOf:
            - $ref: "#/components/schemas/BriefTicketInfo"
            - type: object
              properties:
                created_username:
                  type: string
                  example: John Doe
                modified_username:
                  type: string
                  example: Jane Doe
                resolved_username:
                  type: string
                  example: Jack Doe
          items:
            - $ref: "#/components/schemas/File"
        checklist:
          type: array
          items:
            - $ref: "#/components/schemas/ChecklistFullInfo"
    TypeDetail:
      type: object
      properties:
        general:
          $ref: "#/components/schemas/BriefTicketTypeInfo"
        checklist:
          type: array
          items:
            $ref: "#/components/schemas/ChecklistFullInfo"
    CommentSubscriptionData:
      type: object
      properties:
        ticket_url:
          type: string
          example: "https://www.mycoastalpay.com/helpdesk/ticket/1"
        assignedUsers:
          $ref: "#/components/schemas/UserListStructure"
        files:
          type: array
          items:
            $ref: "#/components/schemas/File"
        merchantVisible:
          type: boolean
          description: "Indicates if the comment is visible for Merchant users"
          example: true

    BriefSubscriptionInfo:
      type: object
      required:
        - url
        - events
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
          description: "Subscription Id"
        url:
          type: string
          description: Subscription URL
          example: https://example.com/hook
        events:
          type: array
          description: Subscription Events
          items:
            type: string
            enum: [
              'subscription.test',
              'api.updated',
              'lead.created',
              'lead.updated',
              'lead.deleted',
              'lead.restored',
              'lead.status.updated',
              'lead.note.added',
              'lead.document.uploaded',
              'lead.email.received',
              'lead.signature.generated',
              'lead.signature.opened',
              'lead.signature.signed',

                            'turboapp.submitted',
              'turboapp.updated',
              'turboapp.approved',
              'turboapp.declined',
              'turboapp.equipment.created',
              'turboapp.equipment.updated',
              'residuals.report.published',
              'residuals.lineitem.added',
              'chargeback.added',
              'chargeback.updated',
              'chargeback.reminder',
              'retrieval.added',
              'retrieval.updated',
              'retrieval.reminder',

              'ticket.created',
              'ticket.updated',
              'ticket.resolved',
              'ticket.commented',
              'ticket.comment.edited',
              'ticket.checklist.updated',
            ]
        options:
          type: object
          description: "Options for each event"
          properties:
            lead.status.updated:
              type: object
              properties:
                sourceStatuses:
                  type: array
                  description: "Statuses from which a lead should be updated to report the update (any if not specified)"
                  items:
                    type: integer
                    example: 1
                targetStatuses:
                  type: array
                  description: "Statuses to which a lead should be updated to report the update (any if not specified)"
                  items:
                    type: integer
                    example: 1
            lead.created:
              type: object
              properties:
                statuses:
                  type: array
                  description: "Statuses with which a created lead should be reported (any if not specified)"
                  items:
                    type: integer
                    example: 1
            lead.note.added:
              type: object
              properties:
                statuses:
                  type: array
                  description: "Statuses of leads whose added notes should be reported (any if not specified)"
                  items:
                    type: integer
                    example: 1
            lead.document.uploaded:
              type: object
              properties:
                statuses:
                  type: array
                  description: "Statuses of leads whose uploaded documents should be reported (any if not specified)"
                  items:
                    type: integer
                    example: 1
            lead.email.received:
              type: object
              properties:
                statuses:
                  type: array
                  description: "Statuses of leads whose received emails should be reported (any if not specified)"
                  items:
                    type: integer
                    example: 1
        multiple_at_once:
          type: boolean
          description: "Report multiple items in one request"
        status:
          type: boolean
          description: "Enable/Disable subscription"
        deactivation_reason:
          type: string
          description: "Deactivation reason. Required if `status` is `False`"

    Hook:
      type: object
      properties:
        requestId:
          type: integer
          example: 1
          description: "Request ID"
        event:
          type: string
          example: ''
          description: "Event ID"

    TestSubscription:
      type: object
      properties:
        hook:
          type: object
          properties:
            requestId:
              type: integer
              example: 1
              description: "Request ID"
            event:
              type: string
              example: 'subscription.test'
              description: "Event ID"
        data:
          type: object
          properties:
            message:
              type: string
              example: "Test event data from https://www.mycoastalpay.com"

    ApiUpdated:
      type: object
      properties:
        hook:
          type: object
          properties:
            requestId:
              type: integer
              example: 1
              description: "Request ID"
            event:
              type: string
              example: 'api.updated'
              description: "Event ID"
        data:
          type: object
          properties:
            version:
              type: string
              example: 1.0.0
              description: "Version number"
            update:
              type: string
              example: 'required'
              enum: [
                'required',
                'optional'
              ]
              description: "Should users do an update of their API clients functional"
            details:
              type: array
              items:
                type: object
                properties:
                  description:
                    type: string
                    example: "Improving a change log."
                    description: "Description of update"
                  link:
                    type: string
                    example: "https://www.mycoastalpay.com/api#/paths/~1subscriptions~1sample~1api.updated/get"
                    description: "Link to endpoint documentation"
                  type:
                    type: string
                    example: "create"
                    enum: [
                      'create',
                      'update'
                    ]
                    description: "Type of API update"
            createdAt:
              type: string
              format: date-time
              example: '2019-01-01T12:04:40+05:00'
              description: "Date and time of creation (ISO 8601)"

    LeadCreatedEventInfo:
      type: object
      properties:
        hook:
          type: object
          properties:
            requestId:
              type: integer
              example: 1
              description: "Request ID"
            event:
              type: string
              example: 'lead.created'
              description: "Event ID"
        data:
          type: object
          properties:
            lead:
              $ref: "#/components/schemas/FullLeadSubscription"
            leads:
              type: array
              description: "'leads' property is passed when 'Multiple at once' feature is enabled"
              items:
                $ref: "#/components/schemas/FullLeadSubscription"

    LeadUpdatedEventInfo:
      type: object
      properties:
        hook:
          type: object
          properties:
            requestId:
              type: integer
              example: 1
              description: "Request ID"
            event:
              type: string
              example: 'lead.updated'
              description: "Event ID"
        data:
          type: object
          properties:
            lead:
              allOf:
                - $ref: "#/components/schemas/FullLeadSubscription"
                - type: object
                  properties:
                    updated_at:
                      type: string
                      format: date-time
                      example: '2019-01-01T12:04:40+05:00'
                      description: "Date and time of creation (ISO 8601)"
                    updated_by:
                      $ref: "#/components/schemas/UserStructure"
            leads:
              type: array
              description: "'leads' property is passed when 'Multiple at once' feature is enabled"
              items:
                allOf:
                  - $ref: "#/components/schemas/FullLeadSubscription"
                  - type: object
                    properties:
                      updated_at:
                        type: string
                        format: date-time
                        example: '2019-01-01T12:04:40+05:00'
                        description: "Date and time of creation (ISO 8601)"
                      updated_by:
                        $ref: "#/components/schemas/UserStructure"

    LeadDeletedEventInfo:
      type: object
      properties:
        hook:
          type: object
          properties:
            requestId:
              type: integer
              example: 1
              description: "Request ID"
            event:
              type: string
              example: 'lead.deleted'
              description: "Event ID"
        data:
          type: object
          properties:
            lead:
              allOf:
                - $ref: "#/components/schemas/ShortLeadSubscription"
                - type: object
                  description: "'lead' property is passed when 'Multiple at once' feature is disabled"
                  properties:
                    deletedBy:
                      $ref: "#/components/schemas/UserStructure"
            leads:
              type: array
              description: "'leads' property is passed when 'Multiple at once' feature is enabled"
              items:
                allOf:
                  - $ref: "#/components/schemas/ShortLeadSubscription"
                  - type: object
                    description: "'lead' property is passed when 'Multiple at once' feature is disabled"
                    properties:
                      deletedBy:
                        $ref: "#/components/schemas/UserStructure"

    LeadRestoredEventInfo:
      type: object
      properties:
        hook:
          type: object
          properties:
            requestId:
              type: integer
              example: 1
              description: "Request ID"
            event:
              type: string
              example: 'lead.restored'
              description: "Event ID"
        data:
          type: object
          properties:
            lead:
              allOf:
                - $ref: "#/components/schemas/ShortLeadSubscription"
                - type: object
                  description: "'lead' property is passed when 'Multiple at once' feature is disabled"
                  properties:
                    restoredAt:
                      type: string
                      format: date-time
                      example: '2019-01-01T12:04:40+05:00'
                      description: "Date and time of creation (ISO 8601)"
                    restoredBy:
                      $ref: "#/components/schemas/UserStructure"
            leads:
              type: array
              description: "'leads' property is passed when 'Multiple at once' feature is enabled"
              items:
                allOf:
                  - $ref: "#/components/schemas/ShortLeadSubscription"
                  - type: object
                    description: "'lead' property is passed when 'Multiple at once' feature is disabled"
                    properties:
                      restoredAt:
                        type: string
                        format: date-time
                        example: '2019-01-01T12:04:40+05:00'
                        description: "Date and time of creation (ISO 8601)"
                      restoredBy:
                        $ref: "#/components/schemas/UserStructure"

    LeadStatusUpdatedEventInfo:
      type: object
      properties:
        hook:
          type: object
          properties:
            requestId:
              type: integer
              example: 1
              description: "Request ID"
            event:
              type: string
              example: 'lead.status.updated'
              description: "Event ID"
        data:
          type: object
          properties:
            lead:
              allOf:
                - $ref: "#/components/schemas/FullLeadSubscription"
                - type: object
                  description: "'lead' property is passed when 'Multiple at once' feature is disabled"
                  properties:
                    previousStatus:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                          description: "Status ID"
                        name:
                          type: string
                          example: "Status One"
                          description: "Status Name"
                    newStatus:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 2
                          description: "Status ID"
                        name:
                          type: string
                          example: "Status Two"
                          description: "Status Name"
                    statusUpdatedAt:
                      type: string
                      format: date-time
                      example: '2019-01-01T12:04:40+05:00'
                      description: "Date and time of creation (ISO 8601)"
                    statusUpdatedBy:
                      $ref: "#/components/schemas/UserStructure"
                    salesRep:
                      $ref: "#/components/schemas/UserStructure"
            leads:
              type: array
              description: "'leads' property is passed when 'Multiple at once' feature is enabled"
              items:
                allOf:
                  - $ref: "#/components/schemas/FullLeadSubscription"
                  - type: object
                    description: "'lead' property is passed when 'Multiple at once' feature is disabled"
                    properties:
                      previousStatus:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                            description: "Status ID"
                          name:
                            type: string
                            example: "Status One"
                            description: "Status Name"
                      newStatus:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                            description: "Status ID"
                          name:
                            type: string
                            example: "Status Two"
                            description: "Status Name"
                      statusUpdatedAt:
                        type: string
                        format: date-time
                        example: '2019-01-01T12:04:40+05:00'
                        description: "Date and time of creation (ISO 8601)"
                      statusUpdatedBy:
                        $ref: "#/components/schemas/UserStructure"
                      salesRep:
                        $ref: "#/components/schemas/UserStructure"

    LeadNoteAddedEventInfo:
      type: object
      properties:
        hook:
          type: object
          properties:
            requestId:
              type: integer
              example: 1
              description: "Request ID"
            event:
              type: string
              example: 'lead.note.added'
              description: "Event ID"
        data:
          type: object
          properties:
            lead:
              allOf:
                - $ref: "#/components/schemas/ShortLeadSubscription"
                - type: object
                  description: "'lead' property is passed when 'Multiple at once' feature is disabled"
                  properties:
                    note:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                          description: "Note ID"
                        name:
                          type: string
                          example: "Note text"
                          description: "Note text"
                        pinned:
                          type: boolean
                          example: true
                          description: "Whether The Note Is Pinned"
                        images:
                          type: array
                          items:
                            type: string
                            example: "http://dummy.url/fake.jpeg"
                        createdAt:
                          type: string
                          format: date-time
                          example: '2019-01-01T12:04:40+05:00'
                          description: "Date and time of creation (ISO 8601)"
                        createdBy:
                          $ref: "#/components/schemas/UserStructure"
            leads:
              type: array
              description: "'leads' property is passed when 'Multiple at once' feature is enabled"
              items:
                allOf:
                  - $ref: "#/components/schemas/ShortLeadSubscription"
                  - type: object
                    properties:
                      note:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                            description: "Note ID"
                          name:
                            type: string
                            example: "Note text"
                            description: "Note text"
                          pinned:
                            type: boolean
                            example: true
                            description: "Whether The Note Is Pinned"
                          images:
                            type: array
                            items:
                              type: string
                              example: "http://dummy.url/fake.jpeg"
                          createdAt:
                            type: string
                            format: date-time
                            example: '2019-01-01T12:04:40+05:00'
                            description: "Date and time of creation (ISO 8601)"
                          createdBy:
                            $ref: "#/components/schemas/UserStructure"

    LeadDocumentUploadedEventInfo:
      type: object
      properties:
        hook:
          type: object
          properties:
            requestId:
              type: integer
              example: 1
              description: "Request ID"
            event:
              type: string
              example: 'lead.document.uploaded'
              description: "Event ID"
        data:
          type: object
          properties:
            lead:
              allOf:
                - $ref: "#/components/schemas/ShortLeadSubscription"
                - type: object
                  description: "'lead' property is passed when 'Multiple at once' feature is disabled"
                  properties:
                    document:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                          description: "Document ID"
                        label:
                          type: string
                          example: "Label"
                          description: "Document label"
                        filename:
                          type: string
                          example: "file.zip"
                          description: "Filename"
                        file:
                          type: string
                          example: "http://dummy.url/file.zip"
                          description: "File url"
                        uploadedAt:
                          type: string
                          format: date-time
                          example: '2019-01-01T12:04:40+05:00'
                          description: "Date and time of uploading (ISO 8601)"
                        uploadedBy:
                          $ref: "#/components/schemas/UserStructure"
            leads:
              type: array
              description: "'leads' property is passed when 'Multiple at once' feature is enabled"
              items:
                allOf:
                  - $ref: "#/components/schemas/ShortLeadSubscription"
                  - type: object
                    properties:
                      document:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                            description: "Document ID"
                          label:
                            type: string
                            example: "Label"
                            description: "Document label"
                          filename:
                            type: string
                            example: "file.zip"
                            description: "Filename"
                          file:
                            type: string
                            example: "http://dummy.url/file.zip"
                            description: "File url"
                          uploaded_at:
                            type: string
                            format: date-time
                            example: '2019-01-01T12:04:40+05:00'
                            description: "Date and time of uploading (ISO 8601)"
                          uploaded_by:
                            $ref: "#/components/schemas/UserStructure"

    LeadEmailReceivedEventInfo:
      type: object
      properties:
        hook:
          type: object
          properties:
            requestId:
              type: integer
              example: 1
              description: "Request ID"
            event:
              type: string
              example: 'lead.email.received'
              description: "Event ID"
        data:
          type: object
          properties:
            lead:
              type: object
              description: "'lead' property is passed when 'Multiple at once' feature is disabled"
              properties:
                id:
                  type: integer
                  example: 1
                  description: "Lead ID"
                lead_url:
                  type: string
                  example: "https://www.mycoastalpay.com/lead/view/1"
                  description: "Lead URL"
                name:
                  type: string
                  example: "Super Lead"
                  description: "Lead Name"
                emailAddress:
                  type: string
                  example: "lead@email.com"
                  description: "Lead Default Email"
                contact:
                  type: string
                  example: "John Doe"
                  description: "Lead Default Contact Name"
                phone:
                  type: string
                  example: "555-555-5555"
                  description: "Lead Default Contact Phone Number"
                address:
                  type: object
                  properties:
                    address:
                      type: string
                      example: "86th street, apt. 1"
                      description: "Lead Default Address"
                    city:
                      type: string
                      example: "Brooklyn"
                      description: "Lead Default City"
                    state:
                      type: string
                      example: "NY"
                      description: "Lead Default State"
                    zip:
                      type: string
                      example: "10001"
                      description: "Lead Default ZIP"
                email:
                  type: object
                  properties:
                    from:
                      type: string
                      example: "John Doe <john@doe.com>"
                      description: "Sent from (name and email)"
                    to:
                      type: string
                      example: "jack@sparrow.com"
                      description: "Sent to(email)"
                    subject:
                      type: string
                      example: "Subject"
                      description: "Email subject"
                    bodyText:
                      type: string
                      example: "Pure text"
                      description: "Email message without html"
                    bodyHtml:
                      type: string
                      example: "<html>Html content</html>"
                      description: "Email message including html"
                    sentAt:
                      type: string
                      format: date-time
                      example: '2019-01-01T12:04:40+05:00'
                      description: "Date and time of receiving the email (ISO 8601)"
                assignedUsers:
                  $ref: "#/components/schemas/UserListStructure"
            leads:
              type: array
              description: "'leads' property is passed when 'Multiple at once' feature is enabled"
              items:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                    description: "Lead ID"
                  lead_url:
                    type: string
                    example: "https://www.mycoastalpay.com/lead/view/1"
                    description: "Lead URL"
                  name:
                    type: string
                    example: "Super Lead"
                    description: "Lead Name"
                  emailAddress:
                    type: string
                    example: "lead@email.com"
                    description: "Lead Default Email"
                  contact:
                    type: string
                    example: "John Doe"
                    description: "Lead Default Contact Name"
                  phone:
                    type: string
                    example: "555-555-5555"
                    description: "Lead Default Contact Phone Number"
                  address:
                    type: object
                    properties:
                      address:
                        type: string
                        example: "86th street, apt. 1"
                        description: "Lead Default Address"
                      city:
                        type: string
                        example: "Brooklyn"
                        description: "Lead Default City"
                      state:
                        type: string
                        example: "NY"
                        description: "Lead Default State"
                      zip:
                        type: string
                        example: "10001"
                        description: "Lead Default ZIP"
                  email:
                    type: object
                    properties:
                      from:
                        type: string
                        example: "John Doe <john@doe.com>"
                        description: "Sent from (name and email)"
                      to:
                        type: string
                        example: "jack@sparrow.com"
                        description: "Sent to(email)"
                      subject:
                        type: string
                        example: "Subject"
                        description: "Email subject"
                      bodyText:
                        type: string
                        example: "Pure text"
                        description: "Email message without html"
                      bodyHtml:
                        type: string
                        example: "<html>Html content</html>"
                        description: "Email message including html"
                      sentAt:
                        type: string
                        format: date-time
                        example: '2019-01-01T12:04:40+05:00'
                        description: "Date and time of receiving the email (ISO 8601)"
                  assignedUsers:
                    $ref: "#/components/schemas/UserListStructure"

security:
  - Token: []

paths: {}